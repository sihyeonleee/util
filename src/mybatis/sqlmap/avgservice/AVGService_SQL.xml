<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="avgservice">

	<!-- 이솦통계 :: 기관 신청자 목록 -->
    <select id="avgservice.selectCmpRegisterList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 기관 신청자 목록 */
        SELECT   
			A.ESTBL_REQST_DE as "신청일",
			  A.PSITN_NM as "기관명"
			  , 
			  CASE
			   WHEN IFNULL(A.ESTER_SN, '') != ''
			   THEN
			     (SELECT B.USER_NM
			      FROM   TB_SUM_USER_INFO B
			      WHERE  B.USER_SN = A.ESTER_SN)
			   ELSE
			     '-'
			  END as "신청자"
			  , 
			  CASE
			   WHEN IFNULL(A.ESTBL_OPETR_SN, '') != ''
			   THEN
			     (SELECT B.USER_NM
			      FROM   TB_SUM_USER_INFO B
			      WHERE  B.USER_SN = A.ESTBL_OPETR_SN)
			   ELSE
			     '-'
			  END as "처리자"
			  , CONCAT( 'https://www.ebssw.kr/', A.HMPG_URL ) as "URL"
			  , A.HMPG_SLGN as "한줄 슬로건"
			  , A.HMPG_TAG as "태그"
			  ,CAST(REPLACE(REPLACE(A.HMPG_INTRCN, CHAR(10), ""), CHAR(13), "") as char)  as "홈페이지 소개"
			  , (
			    SELECT
			      GROUP_CONCAT(C.ALCTCR_CL_NM separator ' | ')
			    FROM
			      TB_SCM_ALCTCR_CL_SYSTM C
			      LEFT OUTER JOIN TB_SUM_HMPG_REALM B ON B.ALCTCR_CL_SN = C.ALCTCR_CL_SN 
			      AND B.CL_LEVEL = 1  AND B.ALCTCR_CL_SN IS NOT NULL 
			    WHERE
			      C.CL_LEVEL = 1
			      AND B.HMPG_REQST_SN = A.HMPG_REQST_SN
			  ) as "분야"
			  , (
			    SELECT
			      GROUP_CONCAT(C.CODE_NM separator ' | ')
			    FROM
			      COMTCCMMNDETAILCODE C
			      LEFT OUTER JOIN TB_SUM_HMPG_LANG B ON B.SW_LANG_CODE = C.CODE 
			    WHERE
			      C.CODE_ID = 'SW_LANG_CODE'
			      AND B.SW_LANG_CODE IS NOT NULL
			      AND B.HMPG_REQST_SN = A.HMPG_REQST_SN
			  ) as "언어"
			  , (
			    SELECT
			        GROUP_CONCAT(C.CODE_NM separator ' | ')
			    FROM
			      COMTCCMMNDETAILCODE C
			      LEFT OUTER JOIN TB_SUM_HMPG_SVC_TRGET B ON B.SVC_TRGET_CODE = C.CODE 
			    WHERE
			      C.CODE_ID = 'SVC_TRGET_CODE'
			      AND B.SVC_TRGET_CODE IS NOT NULL
			      AND B.HMPG_REQST_SN = A.HMPG_REQST_SN
			  ) as "서비스 대상"
			  , F_CMMNCODE_NM(A.HMPG_PRPOS_CODE, 'HMPG_PRPOS_CODE') as "용도"
			  , (SELECT B.CODE_NM
			        FROM   COMTCCMMNDETAILCODE B
			        WHERE  B.CODE_ID = 'EXPECT_LRNR_CO_CODE' AND B.CODE = A.EXPECT_LRNR_CO_CODE) as "예상학습자수"
			  , (
			    CASE WHEN IFNULL(A.OCCP_CODE, 0) <![CDATA[<>]]> '009' THEN
			      ( SELECT B.CODE_NM
			        FROM   COMTCCMMNDETAILCODE B
			        WHERE  B.CODE_ID = 'OPER_PURPS_CODE' AND B.CODE = A.OPER_PURPS_CODE )
			    ELSE
			      ( SELECT B.CODE_NM
			        FROM   COMTCCMMNDETAILCODE B
			        WHERE  B.CODE_ID = 'OCCP_CODE' AND B.CODE = A.ESTBL_STTUS_CODE )
			    END
			  )as "운영 목적"
			  , REPLACE(REPLACE(A.OPER_PLAN, CHAR(10), ""), CHAR(13), "")  as "기관 활동계획 및 목표"
			  , (SELECT B.CODE_NM
			     FROM   COMTCCMMNDETAILCODE B
			     WHERE  B.CODE_ID = 'ESTBL_STTUS_CODE' AND B.CODE = A.ESTBL_STTUS_CODE) as "상태"
		FROM TB_SUM_HMPG_REQST A
		WHERE    
		  A.HMPG_SE_CODE = '003' 
		  AND A.ESTBL_STTUS_CODE != '000' 
		  AND A.ESTBL_REQST_DE >= DATE(#{sDate}) AND A.ESTBL_REQST_DE <![CDATA[<]]> (DATE(#{eDate}) )
		order by A.HMPG_REQST_SN desc
    </select>
    
	<!-- 이솦통계 :: 크리에이터 신청자 목록 -->
    <select id="avgservice.selectCrtRegisterList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 크리에이터 신청자 목록 */
        SELECT   
				A.ESTBL_REQST_DE,A.HMPG_REQST_SN as "hmpgReqstSn",
		         A.HMPG_SE_CODE as "hmpgSeCode",
		         A.ESTER_SN as "esterSn",
		         (SELECT U.USER_NM
		                    FROM   TB_SUM_USER_INFO U
		                    WHERE  U.USER_SN = A.ESTER_SN) as "esterNm",
		              (SELECT U.USER_NM
		                           FROM   TB_SUM_USER_INFO U
		                           WHERE  U.USER_SN = A.ESTER_SN) as esterUserNm,
		         (SELECT U.USER_ID
		                    FROM   TB_SUM_USER_INFO U
		                    WHERE  U.USER_SN = A.ESTER_SN) as "esterId",
		         (SELECT U.MOBLPHON_NO
		                           FROM   TB_SUM_USER_INFO U
		                           WHERE  U.USER_SN = A.ESTER_SN) as "esterPhoneNo",
		         DATE_FORMAT(A.ESTBL_REQST_DE, '%Y-%m-%d') as "estblReqstDe",
		         CASE WHEN A.ESTBL_PROCESS_DE IS NOT NULL THEN DATE_FORMAT(A.ESTBL_PROCESS_DE, '%Y-%m-%d') ELSE NULL END as "estblProcessDe",
		         A.ESTBL_STTUS_CODE as "estblSttusCode",
		         (SELECT B.CODE_NM
		          FROM   COMTCCMMNDETAILCODE B
		          WHERE  B.CODE_ID = 'ESTBL_STTUS_CODE' AND B.CODE = A.ESTBL_STTUS_CODE) as "estblSttusCodeNm",
		         A.ESTBL_OPETR_SN as "estblOpetrSn",
		         CASE
		           WHEN IFNULL(A.ESTBL_OPETR_SN, '') != ''
		           THEN
		             (SELECT B.USER_NM
		              FROM   TB_SUM_USER_INFO B
		              WHERE  B.USER_SN = A.ESTBL_OPETR_SN)
		           ELSE
		             '-'
		         END as "estblOpetrNm"
		FROM     TB_SUM_HMPG_REQST A
		WHERE    A.HMPG_SE_CODE = '002'
		AND A.ESTBL_STTUS_CODE != '000'
		  AND A.ESTBL_REQST_DE >= DATE(#{sDate}) AND A.ESTBL_REQST_DE <![CDATA[<]]> (DATE(#{eDate}) )
		ORDER BY hmpgReqstSn DESC
    </select>
    
	<!-- 이솦통계 :: 멘토 신청자 목록 -->
    <select id="avgservice.selectMntRegisterList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 멘토 신청자 목록 */
        SELECT   A.MNTO_SN AS "멘토순번",         
		           (SELECT U.USER_NM
		                    FROM   TB_SUM_USER_INFO U
		                    WHERE  U.USER_SN = A.MNTO_SN) as "멘토이름",
		         (SELECT U.USER_ID
		                    FROM   TB_SUM_USER_INFO U
		                    WHERE  U.USER_SN = A.MNTO_SN)
		           as "멘토 아이디",
		         DATE_FORMAT(A.MNTO_REQST_DE, '%Y-%m-%d') AS "신청일",
		         F_CMMNCODE_NM(A.MNTO_STTUS_CODE, 'MNTO_STTUS_CODE') AS "신청상태",
		         DATE_FORMAT(A.MNTO_PROCESS_DE, '%Y-%m-%d') AS "처리일",
		         A.MNTO_STTUS_CN as "신청상태내용",
		         A.MNTO_BGNDE as "멘토시작일",
		         A.MNTO_ENDDE as "멘토종료일",
		         F_USER_NM(A.MNTO_OPETR_SN) AS "멘토 처리자 이름",
		         F_CMMNCODE_NM(A.OCCP_CODE, 'OCCP_CODE') AS "직업명"
		FROM     TB_SUM_MNTO_INFO A
		WHERE    A.MNTO_STTUS_CODE != '000' 
			AND A.MNTO_REQST_DE >= DATE(#{sDate}) AND A.MNTO_REQST_DE <![CDATA[<]]> DATE(#{eDate}) 
		ORDER BY DATE_FORMAT(A.MNTO_REQST_DE, '%Y-%m-%d') DESC, A.MNTO_SN  ASC
    </select>
    
    <!-- 이솦통계 :: 코딩파티 시즌 1 (펭수) -->
    <select id="avgservice.selectCodingPartyPs" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩파티 시즌 1 (펭수) */
        select
		(
			SELECT
			 count(DISTINCT(PRTY_USER_SN)) AS pa
			 FROM TB_DBC_CDNG_PRTY_LRN_HIST
			where 1=1 
			and LRN_COURS = 'ESOF02'
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as pa
		,(
			SELECT
			 count(DISTINCT(PRTY_USER_SN)) AS ps
			 FROM TB_DBC_CDNG_PRTY_LRN_HIST
			where 1=1 
			and LRN_COURS = 'ESOF02'
			 and LRN_MISN_SUCCES_AT  = 1
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as ps
		from dual
    </select>
    
    <!-- 이솦통계 :: 코딩파티 시즌 1 (뚜앙) -->
    <select id="avgservice.selectCodingPartyDa" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩파티 시즌 1 (뚜앙) */
		select
		(
			SELECT
			 count(DISTINCT(PRTY_USER_SN)) AS pa
			 FROM TB_DBC_CDNG_PRTY_LRN_HIST
			where 1=1 
			and LRN_COURS = 'ESOF01'
			AND LRN_STAGE = 1
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as d1a
		,(
			SELECT
			 count(DISTINCT(PRTY_USER_SN)) AS ps
			 FROM TB_DBC_CDNG_PRTY_LRN_HIST
			where 1=1 
			and LRN_COURS = 'ESOF01'
			 and LRN_MISN_SUCCES_AT  = 1
			 AND LRN_STAGE = 1
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as d1s
		,(
			SELECT
			 count(DISTINCT(PRTY_USER_SN)) AS pa
			 FROM TB_DBC_CDNG_PRTY_LRN_HIST
			where 1=1 
			and LRN_COURS = 'ESOF01'
			AND LRN_STAGE = 2
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as d2a
		,(
			SELECT
			 count(DISTINCT(PRTY_USER_SN)) AS ps
			 FROM TB_DBC_CDNG_PRTY_LRN_HIST
			where 1=1 
			and LRN_COURS = 'ESOF01'
			 and LRN_MISN_SUCCES_AT  = 1
			 AND LRN_STAGE = 2
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as d2s
		,(
			SELECT
			 count(DISTINCT(PRTY_USER_SN)) AS pa
			 FROM TB_DBC_CDNG_PRTY_LRN_HIST
			where 1=1 
			and LRN_COURS = 'ESOF01'
			AND LRN_STAGE = 3
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as d3a
		,(
			SELECT
			 count(DISTINCT(PRTY_USER_SN)) AS ps
			 FROM TB_DBC_CDNG_PRTY_LRN_HIST
			where 1=1 
			and LRN_COURS = 'ESOF01'
			 and LRN_MISN_SUCCES_AT  = 1
			 AND LRN_STAGE = 3
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as d3s
		,(
			SELECT
			 count(DISTINCT(PRTY_USER_SN)) AS pa
			 FROM TB_DBC_CDNG_PRTY_LRN_HIST
			where 1=1 
			and LRN_COURS = 'ESOF01'
			AND LRN_STAGE = 4
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as d4a
		,(
			SELECT
			 count(DISTINCT(PRTY_USER_SN)) AS ps
			 FROM TB_DBC_CDNG_PRTY_LRN_HIST
			where 1=1 
			and LRN_COURS = 'ESOF01'
			 and LRN_MISN_SUCCES_AT  = 1
			 AND LRN_STAGE = 4
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as d4s
		from dual
    </select>
    
    <!-- 이솦통계 :: 코딩파티 시즌 1 (점박 웹) -->
    <select id="avgservice.selectCodingPartyJbw" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩파티 시즌 1 (점박 웹) */
       select
		(
			SELECT
			 count(DISTINCT(PRTY_USER_SN)) AS pa
			 FROM TB_DBC_CDNG_PRTY_LRN_HIST
			where 1=1 
			and LRN_COURS = 'ESOF03'
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as jwa
		,(
			SELECT
			 count(DISTINCT(PRTY_USER_SN)) AS ps
			 FROM TB_DBC_CDNG_PRTY_LRN_HIST
			where 1=1 
			and LRN_COURS = 'ESOF03'
			 and LRN_MISN_SUCCES_AT  = 1
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as jws
		from dual
    </select>
    
    <!-- 이솦통계 :: 코딩파티 시즌 1 (점박 설치) -->
    <select id="avgservice.selectCodingPartyJbi" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩파티 시즌 1 (점박 설치) */
		select
		(
			SELECT
			 count(DISTINCT(ACCES_ID)) AS joinCnt 
					FROM tb_lem_jb_cp_misn
					WHERE 1=1
			        AND MISN_TY = 'jb'
			        AND MISN_STEP_NUMBER = 1
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as d1a
		,(
			SELECT
			 count(DISTINCT(ACCES_ID)) AS joinCnt 
					FROM tb_lem_jb_cp_misn
					WHERE 1=1
			        AND MISN_TY = 'jb'
			        AND MISN_STEP_NUMBER = 1
			         AND DUPLICATE_MISN_AT = 1
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as d1s
		,(
			SELECT
			 count(DISTINCT(ACCES_ID)) AS joinCnt 
					FROM tb_lem_jb_cp_misn
					WHERE 1=1
			        AND MISN_TY = 'jb'
			        AND MISN_STEP_NUMBER = 2
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as d2a
		,(
			SELECT
			count(DISTINCT(ACCES_ID)) AS joinCnt 
					FROM tb_lem_jb_cp_misn
					WHERE 1=1
			        AND MISN_TY = 'jb'
			        AND MISN_STEP_NUMBER = 2
			         AND DUPLICATE_MISN_AT = 1
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as d2s
		,(
			SELECT
			count(DISTINCT(ACCES_ID)) AS joinCnt 
					FROM tb_lem_jb_cp_misn
					WHERE 1=1
			        AND MISN_TY = 'jb'
			        AND MISN_STEP_NUMBER = 3
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as d3a
		,(
			SELECT
			       count(DISTINCT(ACCES_ID)) AS joinCnt 
					FROM tb_lem_jb_cp_misn
					WHERE 1=1
			        AND MISN_TY = 'jb'
			        AND MISN_STEP_NUMBER = 3
			         AND DUPLICATE_MISN_AT = 1
			AND DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') = #{Dt}
		) as d3s
		from dual
    </select>
    
	<!-- 이솦통계 :: 코딩파티 시즌 1 점박이 설치형 (참가자수) -->
    <select id="avgservice.selectCodingPartyJbJoin" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩파티 시즌 1 점박이 설치형 (참가자수) */
		select 
		sd.S_DATE
		,ifnull(cot.cnt,0) AS cnt
		 From 
		(			
		            SELECT 
				    	S_DATE
				  	FROM (
				    	SELECT 		    		
				      		DATE_FORMAT( DATE_FORMAT(#{eDate},'%Y%m%d') - INTERVAL(A.A + (10 * B.A)) DAY, '%Y%m%d') AS S_DATE		      		
				      		, A.A AS AA
				      		, B.A AS BA
				    	FROM (
				      		SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS A
				      		CROSS JOIN (SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 ) AS B
				    ) DT
				  	WHERE  1 = 1		  		
				  	AND DT.S_DATE BETWEEN #{sDate} AND #{eDate}
		                     
		) sd           
		left join (            
		              SELECT      
		    DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') AS FRST_REGIST_PNTTM    
		    ,count(ACCES_ID) as cnt
		  FROM tb_lem_jb_cp_misn
		  where MISN_TY = 'jb'
		  and MISN_STEP_NUMBER = #{stepNumber}
		  group by DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d'),MISN_STEP_NUMBER
		  order by DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d')
		) cot on sd.S_DATE = cot.FRST_REGIST_PNTTM
		order by S_DATE  
    </select>
    
	<!-- 이솦통계 :: 코딩파티 시즌 1 점박이 설치형 (완료) -->
    <select id="avgservice.selectCodingPartyJbCmpl" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩파티 시즌 1 점박이 설치형 (완료) */
		select 
		sd.S_DATE
		,ifnull(SUM(cot.cnt),0) AS cnt
		 From 
		(			
		            SELECT 
				    	S_DATE
				  	FROM (
				    	SELECT 		    		
				      		DATE_FORMAT( DATE_FORMAT(#{eDate},'%Y%m%d') - INTERVAL(A.A + (10 * B.A)) DAY, '%Y%m%d') AS S_DATE		      		
				      		, A.A AS AA
				      		, B.A AS BA
				    	FROM (
				      		SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS A
				      		CROSS JOIN (SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 ) AS B
				    ) DT
				  	WHERE  1 = 1		  		
				  	AND DT.S_DATE BETWEEN #{sDate} AND #{eDate}
		                     
		) sd           
		left join (    
		            SELECT
					  COMPLETION_DT  
					  , SUM(CNT) as cnt
					FROM (
					  SELECT
						ACCES_ID
						, COMPLETION_DT
						, CASE WHEN MISN_QUES_NUMBER = '1|2|3|4|5|6|7|8|9|10|11|12|13|14|15' THEN 2 ELSE 1 END CNT
					  FROM (
						SELECT 
						ACCES_ID
						,DATE_FORMAT(COMPLETION_DT,'%Y%m%d') AS COMPLETION_DT
						,GROUP_CONCAT(MISN_QUES_NUMBER SEPARATOR '|') AS MISN_QUES_NUMBER      
						FROM tb_lem_jb_cp_misn    
						WHERE MISN_NUMBER NOT IN (1,17,18,34,35,51)
						and  MISN_TY = 'jb'
						and MISN_STEP_NUMBER = #{stepNumber}
						GROUP BY ACCES_ID, DATE_FORMAT(COMPLETION_DT,'%Y%m%d')
					  ) MISN
					  WHERE 1=1
						and DATE_FORMAT(COMPLETION_DT,'%Y%m%d')  >= #{sDate}
						AND ( MISN_QUES_NUMBER LIKE '1|2|3|4|5|6|7|8%' OR MISN_QUES_NUMBER LIKE '%9|10|11|12|13|14|15')
					) MISN
					GROUP BY COMPLETION_DT        
		) cot on sd.S_DATE = cot.COMPLETION_DT
		GROUP BY sd.S_DATE   
		order by S_DATE   
    </select>
    
    
    
    
    
    
    <!-- ========== 구 통계 ========== -->
   	<!-- 이솦통계 :: 코딩파티 시즌 2 참가자수 비트고 (도전자) -->
    <select id="avgservice.selectCodingParty2BgJoin" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩파티 시즌 2 참가자수 비트고 (도전자)  */
		select 
		DATE_FORMAT(sd.S_DATE, "%c월 %d일") AS S_DATE
		,ifnull(cot.cnt,0) AS cnt
		
		 From 
		(			
		            SELECT 
				    	S_DATE
				  	FROM (
				    	SELECT 		    		
				      		DATE_FORMAT( DATE_FORMAT(#{eDate},'%Y%m%d') - INTERVAL(A.A + (10 * B.A)) DAY, '%Y%m%d') AS S_DATE		      		
				      		, A.A AS AA
				      		, B.A AS BA
				    	FROM (
				      		SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS A
				      		CROSS JOIN (SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 ) AS B
				    ) DT
				  	WHERE  1 = 1		  		
				  	AND DT.S_DATE BETWEEN #{sDate}  AND #{eDate}
		                     
		) sd           
		left join (            
			select 
			FRST_REGIST_PNTTM
			,sum(cnt)  as cnt
		    from (
				select 
				FRST_REGIST_PNTTM
				,series
				,count(distinct ACCES_ID ) as cnt
				from(
				SELECT 
					ACCES_ID    
					, CASE
						WHEN 1 = MISN_STEP_NUMBER  THEN '1s'
						WHEN 0 = MISN_STEP_NUMBER THEN '2s'
					  END AS series              
					, DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') AS FRST_REGIST_PNTTM
				  FROM TB_LEM_JB_CP_MISN
				  where ( MISN_TY = 'be' OR MISN_TY = 'bg')
				  and DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d')  >= #{sDate}
				)a 
				group by FRST_REGIST_PNTTM
				,series
				)a group by FRST_REGIST_PNTTM
		) cot on sd.S_DATE = cot.FRST_REGIST_PNTTM
		order by S_DATE   
    </select>
    
   	<!-- 이솦통계 :: 코딩파티 시즌 2 참가자수 비트고 (완료자) -->
    <select id="avgservice.selectCodingParty2BgCmpl" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩파티 시즌 2 참가자수 비트고 (완료자)  */
        select 
		sd.S_DATE
		,ifnull(SUM(cot.cnt),0) AS cnt
		 From 
		(			
		            SELECT 
				    	S_DATE
				  	FROM (
				    	SELECT 		    		
				      		DATE_FORMAT( DATE_FORMAT(#{eDate},'%Y%m%d') - INTERVAL(A.A + (10 * B.A)) DAY, '%Y%m%d') AS S_DATE		      		
				      		, A.A AS AA
				      		, B.A AS BA
				    	FROM (
				      		SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS A
				      		CROSS JOIN (SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 ) AS B
				    ) DT
				  	WHERE  1 = 1		  		
				  	AND DT.S_DATE BETWEEN #{sDate} AND #{eDate}
		                     
		) sd           
		left join (    
		           SELECT  
					  COMPLETION_DT
					  , SUM(CNT) as cnt
					FROM (
					  SELECT
						MISN_NUMBER
						, CASE WHEN MISN_NUMBER = '1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16' THEN 1 ELSE 0 END AS CNT         
						, ACCES_ID
						, COMPLETION_DT
					  FROM (
						SELECT 
						  GROUP_CONCAT(MISN_NUMBER SEPARATOR '|') AS MISN_NUMBER
						  , ACCES_ID
						  , DATE_FORMAT(COMPLETION_DT,'%Y%m%d') AS COMPLETION_DT
						FROM TB_LEM_JB_CP_MISN    
						WHERE 1=1 
						and  ( MISN_TY = 'be' OR MISN_TY = 'bg')
						GROUP BY ACCES_ID, DATE_FORMAT(COMPLETION_DT,'%Y%m%d')   
					  ) MISN
					  WHERE 1=1 
						and DATE_FORMAT(COMPLETION_DT,'%Y%m%d')  >= #{sDate}
						AND MISN_NUMBER LIKE '1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16%' 
					) MISN
					GROUP BY COMPLETION_DT
					union all
					select  
						FRST_REGIST_PNTTM as COMPLETION_DT
						,count(distinct ACCES_ID ) as cnt
						from(
						SELECT 
							ACCES_ID    
							, CASE
								WHEN 1 = MISN_STEP_NUMBER  THEN '1s'
								WHEN 0 = MISN_STEP_NUMBER THEN '2s'
							  END AS series              
							, DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') AS FRST_REGIST_PNTTM
						  FROM TB_LEM_JB_CP_MISN
						  where ( MISN_TY = 'be' OR MISN_TY = 'bg')
						  and DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d')  >= #{sDate}
						  and MISN_STEP_NUMBER = 0
						)a 
					group by FRST_REGIST_PNTTM
						,series    
					ORDER BY COMPLETION_DT 
		) cot on sd.S_DATE = cot.COMPLETION_DT
		
		GROUP BY sd.S_DATE   
		order by S_DATE   
    </select>
    
   	<!-- 이솦통계 :: 코딩파티 시즌 2 참가자수 두드리고 (도전자) -->
    <select id="avgservice.selectCodingParty2DgJoin" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩파티 시즌 2 참가자수 두드리고 (도전자)  */
        select 
		sd.S_DATE
		,ifnull(cot.cnt,0) AS cnt
		
		 From 
		(			
		            SELECT 
				    	S_DATE
				  	FROM (
				    	SELECT 		    		
				      		DATE_FORMAT( DATE_FORMAT(#{eDate},'%Y%m%d') - INTERVAL(A.A + (10 * B.A)) DAY, '%Y%m%d') AS S_DATE		      		
				      		, A.A AS AA
				      		, B.A AS BA
				    	FROM (
				      		SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS A
				      		CROSS JOIN (SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 ) AS B
				    ) DT
				  	WHERE  1 = 1		  		
				  	AND DT.S_DATE BETWEEN #{sDate}  AND #{eDate}
		                     
		) sd           
		left join (            
			select 
			FRST_REGIST_PNTTM
			,count(distinct ACCES_ID ) as cnt
			from(
			SELECT 
				ACCES_ID    
				, CASE
					WHEN 1 <![CDATA[<]]> MISN_NUMBER <![CDATA[<=]]> 10 THEN '1s'
					WHEN 11 <![CDATA[<]]> MISN_NUMBER <![CDATA[<=]]> 20 THEN '2s'
					WHEN 21  <![CDATA[<]]> MISN_NUMBER <![CDATA[<=]]> 30 THEN '3s'
				  END AS series              
				, DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') AS FRST_REGIST_PNTTM
			  FROM TB_LEM_JB_CP_MISN
			  where (MISN_TY = 'de' OR MISN_TY = 'dg')
		      and DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d')  >= '20200217' 
			)a 
		    where series = '1s'
			group by FRST_REGIST_PNTTM
		) cot on sd.S_DATE = cot.FRST_REGIST_PNTTM
		order by S_DATE   
    </select>
   	
   	<!-- 이솦통계 :: 코딩파티 시즌 2 참가자수 두드리고 (완료자) -->
    <select id="avgservice.selectCodingParty2DgCmpl" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩파티 시즌 2 참가자수 두드리고 (완료자)  */
        select 
		sd.S_DATE
		,ifnull(SUM(cot.cnt),0) AS cnt
		 From 
		(			
		            SELECT 
				    	S_DATE
				  	FROM (
				    	SELECT 		    		
				      		DATE_FORMAT( DATE_FORMAT(#{eDate},'%Y%m%d') - INTERVAL(A.A + (10 * B.A)) DAY, '%Y%m%d') AS S_DATE		      		
				      		, A.A AS AA
				      		, B.A AS BA
				    	FROM (
				      		SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS A
				      		CROSS JOIN (SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 ) AS B
				    ) DT
				  	WHERE  1 = 1		  		
				  	AND DT.S_DATE BETWEEN #{sDate} AND #{eDate}
		                     
		) sd           
		left join (    
		            SELECT  
					  COMPLETION_DT
					  , SUM(CNT)  as cnt
					FROM (
					  SELECT
						MISN_NUMBER
						, CASE
								WHEN 1 <![CDATA[<]]> MISN_NUMBER <![CDATA[<=]]> 10 THEN 
									CASE WHEN MISN_NUMBER = '1|2|3|4|5|6|7|8|9|10' THEN 2 ELSE 1 END
								WHEN 11 <![CDATA[<]]> MISN_NUMBER <![CDATA[<=]]> 20 THEN 
									CASE WHEN MISN_NUMBER = '11|12|13|14|15|16|17|18|19|20' THEN 2 ELSE 1 END
								WHEN 21  <![CDATA[<]]> MISN_NUMBER <![CDATA[<=]]> 30 THEN 
									CASE WHEN MISN_NUMBER = '21|22|23|24|25|26|27|28|29|30' THEN 2 ELSE 1 END
							  END AS CNT         
						, ACCES_ID
						, COMPLETION_DT
					  FROM (
						SELECT 
						  GROUP_CONCAT(MISN_NUMBER SEPARATOR '|') AS MISN_NUMBER
						  , ACCES_ID
						  , DATE_FORMAT(COMPLETION_DT,'%Y%m%d') AS COMPLETION_DT
						FROM TB_LEM_JB_CP_MISN    
						WHERE 1=1 
						and  (MISN_TY = 'de' OR MISN_TY = 'dg')
						GROUP BY ACCES_ID, DATE_FORMAT(COMPLETION_DT,'%Y%m%d')
					  ) MISN
					  WHERE 1=1 
						and DATE_FORMAT(COMPLETION_DT,'%Y%m%d')  >= '20200217' 
						AND ( MISN_NUMBER LIKE '1|2|3|4|5%' OR MISN_NUMBER LIKE '%6|7|8|9|10'
						OR MISN_NUMBER LIKE '11|12|13|14|15%' OR MISN_NUMBER LIKE '%16|17|18|19|20'
						OR MISN_NUMBER LIKE '21|22|23|24|25%' OR MISN_NUMBER LIKE '%26|27|28|29|30'
						)
					) MISN
					GROUP BY COMPLETION_DT
					ORDER BY COMPLETION_DT    
		) cot on sd.S_DATE = cot.COMPLETION_DT
		
		GROUP BY sd.S_DATE   
		order by S_DATE   
    </select>
    
    <!-- 이솦통계 :: new Game 참가자수 비트고 -->
    <select id="avgservice.selectNewGameBgJoin" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: new Game 참가자수 비트고 */
		select 
		DATE_FORMAT(sd.S_DATE, "%c월 %d일") AS S_DATE
		,ifnull(cot.cnt,0) AS cnt
		
		 From 
		(			
		            SELECT 
				    	S_DATE
				  	FROM (
				    	SELECT 		    		
				      		DATE_FORMAT( DATE_FORMAT(#{eDate},'%Y%m%d') - INTERVAL(A.A + (10 * B.A)) DAY, '%Y%m%d') AS S_DATE		      		
				      		, A.A AS AA
				      		, B.A AS BA
				    	FROM (
				      		SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS A
				      		CROSS JOIN (SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 ) AS B
				    ) DT
				  	WHERE  1 = 1		  		
				  	AND DT.S_DATE BETWEEN #{sDate}  AND #{eDate}
		                     
		) sd           
		left join (            
			select 
			FRST_REGIST_PNTTM
			,sum(cnt)  as cnt
		    from (
				select 
				FRST_REGIST_PNTTM
				,series
				,count(distinct USER_SN ) as cnt
				from(
				SELECT 
					USER_SN    
					, CASE
						WHEN 1 = MISN_STEP_NUMBER  THEN '1s'
						WHEN 0 = MISN_STEP_NUMBER THEN '2s'
					  END AS series              
					, DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') AS FRST_REGIST_PNTTM
				  FROM tb_lem_jb_misn
				  where ( MISN_TY = 'be' )
				  and DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d')  >= #{sDate}
				)a 
				group by FRST_REGIST_PNTTM
				,series
				)a group by FRST_REGIST_PNTTM
		) cot on sd.S_DATE = cot.FRST_REGIST_PNTTM
		order by S_DATE   
    </select>
    
   	<!-- 이솦통계 :: new Game 완료자수 비트고 -->
    <select id="avgservice.selectNewGameBgCmpl" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: new Game 완료자수 비트고 */
        select 
		sd.S_DATE
		,ifnull(SUM(cot.cnt),0) AS cnt
		 From 
		(			
		            SELECT 
				    	S_DATE
				  	FROM (
				    	SELECT 		    		
				      		DATE_FORMAT( DATE_FORMAT(#{eDate},'%Y%m%d') - INTERVAL(A.A + (10 * B.A)) DAY, '%Y%m%d') AS S_DATE		      		
				      		, A.A AS AA
				      		, B.A AS BA
				    	FROM (
				      		SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS A
				      		CROSS JOIN (SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 ) AS B
				    ) DT
				  	WHERE  1 = 1		  		
				  	AND DT.S_DATE BETWEEN #{sDate} AND #{eDate}
		                     
		) sd           
		left join (    
		           SELECT  
					  COMPLETION_DT
					  , SUM(CNT) as cnt
					FROM (
					  SELECT
						MISN_NUMBER
						, CASE WHEN MISN_NUMBER = '1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16' THEN 1 ELSE 0 END AS CNT         
						, USER_SN
						, COMPLETION_DT
					  FROM (
						SELECT 
						  GROUP_CONCAT(MISN_NUMBER SEPARATOR '|') AS MISN_NUMBER
						  , USER_SN
						  , DATE_FORMAT(COMPLETION_DT,'%Y%m%d') AS COMPLETION_DT
						FROM tb_lem_jb_misn    
						WHERE 1=1 
						and  ( MISN_TY = 'be' )
						GROUP BY USER_SN, DATE_FORMAT(COMPLETION_DT,'%Y%m%d')   
					  ) MISN
					  WHERE 1=1 
						and DATE_FORMAT(COMPLETION_DT,'%Y%m%d')  >= #{sDate}
						AND MISN_NUMBER LIKE '1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16%' 
					) MISN
					GROUP BY COMPLETION_DT
					union all
					select  
						FRST_REGIST_PNTTM as COMPLETION_DT
						,count(distinct USER_SN ) as cnt
						from(
						SELECT 
							USER_SN    
							, CASE
								WHEN 1 = MISN_STEP_NUMBER  THEN '1s'
								WHEN 0 = MISN_STEP_NUMBER THEN '2s'
							  END AS series              
							, DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') AS FRST_REGIST_PNTTM
						  FROM tb_lem_jb_misn
						  where ( MISN_TY = 'be' )
						  and DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d')  >= #{sDate}
						  and MISN_STEP_NUMBER = 0
						)a 
					group by FRST_REGIST_PNTTM
						,series    
					ORDER BY COMPLETION_DT 
		) cot on sd.S_DATE = cot.COMPLETION_DT
		
		GROUP BY sd.S_DATE   
		order by S_DATE   
    </select>
    
   	<!-- 이솦통계 :: new Game 참가자수 두드리고 -->
    <select id="avgservice.selectNewGameDgJoin" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: new Game 참가자수 두드리고 */
        select 
		sd.S_DATE
		,ifnull(cot.cnt,0) AS cnt
		
		 From 
		(			
		            SELECT 
				    	S_DATE
				  	FROM (
				    	SELECT 		    		
				      		DATE_FORMAT( DATE_FORMAT(#{eDate},'%Y%m%d') - INTERVAL(A.A + (10 * B.A)) DAY, '%Y%m%d') AS S_DATE		      		
				      		, A.A AS AA
				      		, B.A AS BA
				    	FROM (
				      		SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS A
				      		CROSS JOIN (SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 ) AS B
				    ) DT
				  	WHERE  1 = 1		  		
				  	AND DT.S_DATE BETWEEN #{sDate}  AND #{eDate}
		                     
		) sd           
		left join (            
			select 
			FRST_REGIST_PNTTM
			,count(distinct USER_SN ) as cnt
			from(
			SELECT 
				USER_SN    
				, CASE
					WHEN 1 <![CDATA[<]]> MISN_NUMBER <![CDATA[<=]]> 10 THEN '1s'
					WHEN 11 <![CDATA[<]]> MISN_NUMBER <![CDATA[<=]]> 20 THEN '2s'
					WHEN 21  <![CDATA[<]]> MISN_NUMBER <![CDATA[<=]]> 30 THEN '3s'
				  END AS series              
				, DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d') AS FRST_REGIST_PNTTM
			  FROM tb_lem_jb_misn
			  where (MISN_TY = 'de')
		      and DATE_FORMAT(FRST_REGIST_PNTTM,'%Y%m%d')  >= '20200217' 
			)a 
		    where series = '1s'
			group by FRST_REGIST_PNTTM
		) cot on sd.S_DATE = cot.FRST_REGIST_PNTTM
		order by S_DATE   
    </select>
   	
   	<!-- 이솦통계 :: new Game 완료자수 두드리고 -->
    <select id="avgservice.selectNewGameDgCmpl" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: new Game 완료자수 두드리고 */
        select 
		sd.S_DATE
		,ifnull(SUM(cot.cnt),0) AS cnt
		 From 
		(			
		            SELECT 
				    	S_DATE
				  	FROM (
				    	SELECT 		    		
				      		DATE_FORMAT( DATE_FORMAT(#{eDate},'%Y%m%d') - INTERVAL(A.A + (10 * B.A)) DAY, '%Y%m%d') AS S_DATE		      		
				      		, A.A AS AA
				      		, B.A AS BA
				    	FROM (
				      		SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS A
				      		CROSS JOIN (SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 ) AS B
				    ) DT
				  	WHERE  1 = 1		  		
				  	AND DT.S_DATE BETWEEN #{sDate} AND #{eDate}
		                     
		) sd           
		left join (    
		            SELECT  
					  COMPLETION_DT
					  , SUM(CNT)  as cnt
					FROM (
					  SELECT
						MISN_NUMBER
						, CASE
								WHEN 1 <![CDATA[<]]> MISN_NUMBER <![CDATA[<=]]> 10 THEN 
									CASE WHEN MISN_NUMBER = '1|2|3|4|5|6|7|8|9|10' THEN 2 ELSE 1 END
								WHEN 11 <![CDATA[<]]> MISN_NUMBER <![CDATA[<=]]> 20 THEN 
									CASE WHEN MISN_NUMBER = '11|12|13|14|15|16|17|18|19|20' THEN 2 ELSE 1 END
								WHEN 21  <![CDATA[<]]> MISN_NUMBER <![CDATA[<=]]> 30 THEN 
									CASE WHEN MISN_NUMBER = '21|22|23|24|25|26|27|28|29|30' THEN 2 ELSE 1 END
							  END AS CNT         
						, USER_SN
						, COMPLETION_DT
					  FROM (
						SELECT 
						  GROUP_CONCAT(MISN_NUMBER SEPARATOR '|') AS MISN_NUMBER
						  , USER_SN
						  , DATE_FORMAT(COMPLETION_DT,'%Y%m%d') AS COMPLETION_DT
						FROM tb_lem_jb_misn    
						WHERE 1=1 
						and  (MISN_TY = 'de')
						GROUP BY USER_SN, DATE_FORMAT(COMPLETION_DT,'%Y%m%d')
					  ) MISN
					  WHERE 1=1 
						and DATE_FORMAT(COMPLETION_DT,'%Y%m%d')  >= '20200217' 
						AND ( MISN_NUMBER LIKE '1|2|3|4|5%' OR MISN_NUMBER LIKE '%6|7|8|9|10'
						OR MISN_NUMBER LIKE '11|12|13|14|15%' OR MISN_NUMBER LIKE '%16|17|18|19|20'
						OR MISN_NUMBER LIKE '21|22|23|24|25%' OR MISN_NUMBER LIKE '%26|27|28|29|30'
						)
					) MISN
					GROUP BY COMPLETION_DT
					ORDER BY COMPLETION_DT    
		) cot on sd.S_DATE = cot.COMPLETION_DT
		
		GROUP BY sd.S_DATE   
		order by S_DATE   
    </select>
    
    
    <!-- ========== 신 통계 ========== -->
    <!-- 이솦통계 :: 코딩파티 시즌 2 참가자수 비트고 (도전자) -->
    <select id="avgservice.selectCodingParty2BgJoin2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩파티 시즌 2 참가자수 비트고 (도전자)  */
		select 
		DATE_FORMAT(sd.S_DATE, "%c월 %d일") AS S_DATE
		,ifnull(cot.cnt,0) AS cnt
		 From 
		(			
		            SELECT 
				    	S_DATE
				  	FROM (
				    	SELECT 		    		
				      		DATE_FORMAT( DATE_FORMAT(#{eDate},'%Y%m%d') - INTERVAL(A.A + (10 * B.A)) DAY, '%Y%m%d') AS S_DATE		      		
				      		, A.A AS AA
				      		, B.A AS BA
				    	FROM (
				      		SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS A
				      		CROSS JOIN (SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 ) AS B
				    ) DT
				  	WHERE  1 = 1		  		
				  	AND DT.S_DATE BETWEEN #{sDate}  AND #{eDate}
		                     
		) sd           
		left join (            
			select 
			LAST_UPDT_PNTTM
			,sum(cnt)  as cnt
		    from (
				select 
				LAST_UPDT_PNTTM
				,MISN_NUMBER
				,count( distinct ACCES_ID ) as cnt
				from(
				SELECT 
					ACCES_ID    
					, MISN_NUMBER          
					, DATE_FORMAT(LAST_UPDT_PNTTM,'%Y%m%d') AS LAST_UPDT_PNTTM
				  FROM TB_LEM_JB_CP_MISN
				  where ( MISN_TY = 'be' OR MISN_TY = 'bg')
				  and DATE_FORMAT(LAST_UPDT_PNTTM,'%Y%m%d')  >= #{sDate}
				)a 
				group by LAST_UPDT_PNTTM
				,MISN_NUMBER
				)a group by LAST_UPDT_PNTTM
		) cot on sd.S_DATE = cot.LAST_UPDT_PNTTM
		order by S_DATE   
    </select>
    
   	<!-- 이솦통계 :: 코딩파티 시즌 2 참가자수 두드리고 (도전자) -->
    <select id="avgservice.selectCodingParty2DgJoin2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩파티 시즌 2 참가자수 두드리고 (도전자)  */
        select 
		sd.S_DATE
		,ifnull(cot.cnt,0) AS cnt
		
		 From 
		(			
		            SELECT 
				    	S_DATE
				  	FROM (
				    	SELECT 		    		
				      		DATE_FORMAT( DATE_FORMAT(#{eDate},'%Y%m%d') - INTERVAL(A.A + (10 * B.A)) DAY, '%Y%m%d') AS S_DATE		      		
				      		, A.A AS AA
				      		, B.A AS BA
				    	FROM (
				      		SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS A
				      		CROSS JOIN (SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 ) AS B
				    ) DT
				  	WHERE  1 = 1		  		
				  	AND DT.S_DATE BETWEEN #{sDate}  AND #{eDate}
		                     
		) sd           
		left join ( 
			SELECT   LAST_UPDT_PNTTM
   				   , sum(cnt) as cnt 
			 FROM (           
				select 
				LAST_UPDT_PNTTM
				,count(distinct ACCES_ID ) as cnt
				from(
				  SELECT 
					ACCES_ID    
					, MISN_NUMBER            
					, DATE_FORMAT(LAST_UPDT_PNTTM,'%Y%m%d') AS LAST_UPDT_PNTTM
				  FROM TB_LEM_JB_CP_MISN
				  where (MISN_TY = 'de' OR MISN_TY = 'dg')
			      and DATE_FORMAT(LAST_UPDT_PNTTM,'%Y%m%d')  >= #{sDate} 
				)a 
			    group by LAST_UPDT_PNTTM, MISN_NUMBER
	      ) a group by LAST_UPDT_PNTTM
		) cot on sd.S_DATE = cot.LAST_UPDT_PNTTM
		order by S_DATE   
    </select>
    
    <!-- 이솦통계 :: new Game 참가자수 비트고 -->
    <select id="avgservice.selectNewGameBgJoin2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: new Game 참가자수 비트고 */
		select 
		DATE_FORMAT(sd.S_DATE, "%c월 %d일") AS S_DATE
		,ifnull(cot.cnt,0) AS cnt
		
		 From 
		(			
		            SELECT 
				    	S_DATE
				  	FROM (
				    	SELECT 		    		
				      		DATE_FORMAT( DATE_FORMAT(#{eDate},'%Y%m%d') - INTERVAL(A.A + (10 * B.A)) DAY, '%Y%m%d') AS S_DATE		      		
				      		, A.A AS AA
				      		, B.A AS BA
				    	FROM (
				      		SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS A
				      		CROSS JOIN (SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 ) AS B
				    ) DT
				  	WHERE  1 = 1		  		
				  	AND DT.S_DATE BETWEEN #{sDate}  AND #{eDate}
		                     
		) sd           
		left join (            
			select 
			LAST_UPDT_PNTTM
			,sum(cnt)  as cnt
		    from (
				select 
				LAST_UPDT_PNTTM
				,series
				,MISN_NUMBER
				,count(distinct USER_SN ) as cnt
				from(
				SELECT 
					USER_SN    
					, CASE
						WHEN 1 = MISN_STEP_NUMBER  THEN '1s'
						WHEN 0 = MISN_STEP_NUMBER THEN '2s'
					  END AS series              
					, MISN_NUMBER
					, DATE_FORMAT(LAST_UPDT_PNTTM,'%Y%m%d') AS LAST_UPDT_PNTTM
				  FROM tb_lem_jb_misn
				  where ( MISN_TY = 'be' )
				  and DATE_FORMAT(LAST_UPDT_PNTTM,'%Y%m%d')  >= #{sDate}
				)a 
				group by LAST_UPDT_PNTTM
				, series, MISN_NUMBER
				)a group by LAST_UPDT_PNTTM
		) cot on sd.S_DATE = cot.LAST_UPDT_PNTTM
		order by S_DATE   
    </select>
    
   	<!-- 이솦통계 :: new Game 참가자수 두드리고 -->
    <select id="avgservice.selectNewGameDgJoin2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: new Game 참가자수 두드리고 */
        select 
		sd.S_DATE
		,ifnull(cot.cnt,0) AS cnt
		
		 From 
		(			
		            SELECT 
				    	S_DATE
				  	FROM (
				    	SELECT 		    		
				      		DATE_FORMAT( DATE_FORMAT(#{eDate},'%Y%m%d') - INTERVAL(A.A + (10 * B.A)) DAY, '%Y%m%d') AS S_DATE		      		
				      		, A.A AS AA
				      		, B.A AS BA
				    	FROM (
				      		SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS A
				      		CROSS JOIN (SELECT 0 AS A UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 ) AS B
				    ) DT
				  	WHERE  1 = 1		  		
				  	AND DT.S_DATE BETWEEN #{sDate}  AND #{eDate}
		                     
		) sd           
		left join (            
			SELECT LAST_UPDT_PNTTM, sum(cnt) as cnt
	     	FROM (
	   			select 
	    			LAST_UPDT_PNTTM
		          , series
		          , MISN_NUMBER
	   			  ,count(distinct USER_SN ) as cnt
	   			from(
				  SELECT 
					USER_SN    
					, CASE
						WHEN 1 <![CDATA[<=]]> MISN_NUMBER AND MISN_NUMBER <![CDATA[<=]]> 10 THEN '1s'
						WHEN 11 <![CDATA[<=]]> MISN_NUMBER AND MISN_NUMBER <![CDATA[<=]]> 20 THEN '2s'
						WHEN 21  <![CDATA[<=]]> MISN_NUMBER AND MISN_NUMBER <![CDATA[<=]]> 30 THEN '3s'
						WHEN 31  <![CDATA[<=]]> MISN_NUMBER AND MISN_NUMBER <![CDATA[<=]]> 40 THEN '4s'
					  END AS series
					, MISN_NUMBER              
					, DATE_FORMAT(LAST_UPDT_PNTTM,'%Y%m%d') AS LAST_UPDT_PNTTM
				  FROM tb_lem_jb_misn
				  where (MISN_TY = 'de')
			      and DATE_FORMAT(LAST_UPDT_PNTTM,'%Y%m%d')  >= #{sDate}
		      )a group by LAST_UPDT_PNTTM, series, MISN_NUMBER
      		)a GROUP BY LAST_UPDT_PNTTM
		) cot on sd.S_DATE = cot.LAST_UPDT_PNTTM
		order by S_DATE   
    </select>
   	
    
    
    
    
    
    <select id="avgservice.selectCdngPrjct398JoinCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩프로젝트 (398) 참여자(조회) 수  */
    	select DATE_FORMAT(REGIST_PNTTM, '%Y-%m-%d') AS date
		      , count(*) AS cnt
		from tb_lem_cdng_prjct_visit_hist
		where PRJCT_MANAGE_SN = 398
		GROUP BY date
    </select>
    
    <select id="avgservice.selectCdngPrjct496JoinCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩프로젝트 (496) 참여자(조회) 수  */
    	select DATE_FORMAT(REGIST_PNTTM, '%Y-%m-%d') AS date
		      , count(*) AS cnt
		from tb_lem_cdng_prjct_visit_hist
		where PRJCT_MANAGE_SN = 496
		GROUP BY date
    </select>
    
    <select id="avgservice.selectCdngEduEvtAlctcrUse" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩교육 이벤트 강좌별 이용수  */
        SELECT day, alctcrNm, lctreNm, COUNT(*) AS cnt FROM (
		    SELECT DATE_FORMAT(e.REGIST_PNTTM, '%Y-%m-%d') AS day
		         , b.ALCTCR_SN AS ALCTCR_SN
		         , b.ALCTCR_NM AS alctcrNm
		         , d.LCTRE_SN AS LCTRE_SN
		         , d.LCTRE_NM AS lctreNm
				FROM tmp_lcm_alctcr_cdngedu_mhd a
				INNER JOIN tb_lcm_alctcr_manage b ON a.ALCTCR_SN = b.ALCTCR_SN
				INNER JOIN tb_lcm_step_manage c ON b.ALCTCR_SN = c.ALCTCR_SN
				INNER JOIN tb_lcm_lctre_manage d ON c.STEP_SN = d.STEP_SN
				INNER JOIN tb_lem_cntnts_use e ON d.LCTRE_SN = e.LCTRE_SN
				WHERE (#{frstPnttm} <![CDATA[<=]]> e.REGIST_PNTTM AND e.REGIST_PNTTM <![CDATA[<=]]> DATE_ADD(#{lastPnttm}, INTERVAL 1 DAY))
		)a  
		GROUP BY day, ALCTCR_SN, LCTRE_SN
    </select>
    
    <select id="avgservice.selectCdngEduEvtGameUse" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩교육 이벤트 게임 이용수  */
		<!-- SELECT  day
		      , COUNT(IF(LRN_COURS='ESOF01' AND LRN_STAGE=1,1,null)) AS dduJoin1
		      , COUNT(IF(LRN_COURS='ESOF01' AND LRN_STAGE=2,1,null)) AS dduJoin2
		      , COUNT(IF(LRN_COURS='ESOF01' AND LRN_STAGE=3,1,null)) AS dduJoin3
		      , COUNT(IF(LRN_COURS='ESOF01' AND LRN_STAGE=4,1,null)) AS dduJoin4
		      , COUNT(IF(LRN_COURS='ESOF02' AND LRN_STAGE=1,1,null)) AS penJoin1
		      , COUNT(IF(LRN_COURS='ESOF02' AND LRN_STAGE=2,1,null)) AS penJoin2
		      , COUNT(IF(LRN_COURS='ESOF02' AND LRN_STAGE=3,1,null)) AS penJoin3
		      , COUNT(IF(LRN_COURS='ESOF02' AND LRN_STAGE=4,1,null)) AS penJoin4
		      , COUNT(IF(LRN_COURS='ESOF02' AND LRN_STAGE=5,1,null)) AS penJoin5
		      , COUNT(IF(LRN_COURS='ESOF02' AND LRN_STAGE=6,1,null)) AS penJoin6
		FROM (
		  SELECT  DATE_FORMAT(FRST_REGIST_PNTTM, '%Y-%m-%d') AS day
		          , LRN_COURS
		          , LRN_STAGE
		          , USER_SN
		    FROM TB_DBC_BH_EDC_PCKAGE_LRN_HIST 
		  WHERE (LRN_COURS = 'ESOF01' OR LRN_COURS = 'ESOF02' )
		  GROUP BY day, LRN_COURS, LRN_STAGE, USER_SN 
		)a WHERE (#{frstPnttm} <![CDATA[<=]]> day AND day <![CDATA[<=]]> #{lastPnttm})
		GROUP BY day -->
		
		SELECT  day, LRN_COURS AS lrnCours, LRN_STAGE AS lrnStage, LRN_MISN AS lrnMisn, COUNT(*) AS cnt
		FROM (
			SELECT  DATE_FORMAT(FRST_REGIST_PNTTM, '%Y-%m-%d') AS day
			      , LRN_COURS
			      , LRN_STAGE
	              , LRN_MISN
			      , USER_SN
			FROM TB_DBC_BH_EDC_PCKAGE_LRN_HIST 
		    WHERE (LRN_COURS = 'ESOF01' OR LRN_COURS = 'ESOF02' )
	      	AND (#{frstPnttm}<![CDATA[<=]]>FRST_REGIST_PNTTM AND FRST_REGIST_PNTTM<![CDATA[<=]]>DATE_ADD(#{lastPnttm}, INTERVAL 1 DAY))
			GROUP BY day, LRN_COURS, LRN_STAGE, LRN_MISN, USER_SN 
		)a 
		GROUP BY day, LRN_COURS, LRN_STAGE, LRN_MISN
	    ORDER BY day, LRN_COURS, LRN_STAGE, FIELD(LRN_MISN, 1,2,3,4,5,6,7,8,9,10)
    </select>
    
    <select id="avgservice.selectCdngEduEvtJoinCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩교육 이벤트 주간 참가자 수  */
	    SELECT DATE_FORMAT(AGRE_DE, '%Y-%m-%d') AS day, COUNT(*) cnt 
	    FROM TB_CBS_BBSCTT_PARTCPTN
	  	WHERE BBSCTT_SN = 28925
	    AND (#{frstPnttm} <![CDATA[<=]]> AGRE_DE AND AGRE_DE <![CDATA[<=]]> DATE_ADD(#{lastPnttm}, INTERVAL 1 DAY))
	    GROUP BY day
    </select>
    
    <select id="avgservice.selectCdngEduEvtCertCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 이솦통계 :: 코딩교육 이벤트 참여자 수 _ 이수자 수 */
    	SELECT    DATE_FORMAT(REGIST_PNTTM, '%Y-%m-%d') AS day
    			, VIEW_CNT AS view
    			, CMPL_CNT AS cmpl 
    			, CMPM1_CNT AS cmpl1
    			, CMPM2_CNT AS cmpl2
    			, CMPM3_CNT AS cmpl3
    	FROM tmp_cdngedu_event_cnt 
    	WHERE (#{frstPnttm} <![CDATA[<]]> REGIST_PNTTM AND REGIST_PNTTM <![CDATA[<]]> DATE_ADD(#{lastPnttm}, INTERVAL 1 DAY))
    </select>
    
    
    
    <select id="avgservice.selectRealTimeSchoolCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 조종례 화상강의 학교수  */
        select a.CITY_NM AS cityNm
		  , a.SCHUL_LEVEL_CODE AS schulLevelCode
		  , COUNT(*) AS cnt
		from ( SELECT sc.CITY_NM
		        , sc.SCHUL_LEVEL_CODE
		        , sc.SCHUL_CODE
		        , sc.SCHUL_NM
		        , COUNT(*) 
		      FROM host_info hi
		        INNER JOIN TB_SCM_SCHUL sc ON hi.host = sc.HOST
		        INNER JOIN TB_LEM_HMPG_OPER ho ON sc.SCHUL_CODE = ho.SCHUL_CODE
		        INNER JOIN tb_lcm_alctcr_manage a ON ho.HMPG_OPER_SN = a.HMPG_OPER_SN
		        INNER JOIN tb_lcm_step_manage b On a.ALCTCR_SN = b.ALCTCR_SN
		        INNER JOIN tb_lcm_lctre_manage c ON b.STEP_SN = c.STEP_SN
		        INNER JOIN tb_lcm_cntnts_info d ON c.CNTNTS_SN = d.CNTNTS_SN
		      WHERE d.CNTNTS_TY_CODE = '017'
		      AND   (d.FRST_REGIST_PNTTM <![CDATA[>]]> #{frstPnttm} AND d.FRST_REGIST_PNTTM <![CDATA[<]]> DATE_FORMAT( DATE_ADD(#{frstPnttm}, INTERVAL 1 DAY), '%Y-%m-%d'))
<!-- 		      AND   (d.FRST_REGIST_PNTTM <![CDATA[>]]> '2020-12-08 6' AND d.FRST_REGIST_PNTTM <![CDATA[<]]> '2020-12-08 18') -->
<!-- 		      AND   (d.FRST_REGIST_PNTTM <![CDATA[>]]> '2020-12-09 6' AND d.FRST_REGIST_PNTTM <![CDATA[<]]> '2020-12-09 18') -->
		      GROUP BY sc.CITY_NM, sc.SCHUL_LEVEL_CODE, sc.SCHUL_CODE
		    ) a
		GROUP BY a.CITY_NM
    </select>
    
    <select id="avgservice.selectRealTimeClassCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 조종례 화상강의 학급수  */
		select a.CITY_NM AS cityNm
		  , a.SCHUL_LEVEL_CODE AS schulLevelCode
		  , COUNT(*) AS cnt
		from ( SELECT sc.CITY_NM
		        , sc.SCHUL_LEVEL_CODE
		        , sc.SCHUL_CODE
		        , sc.SCHUL_NM
		        , ho.HMPG_OPER_SN
		        , ho.HMPG_NM
		        , COUNT(*) 
		      FROM host_info hi
		        INNER JOIN TB_SCM_SCHUL sc ON hi.host = sc.HOST
		        INNER JOIN TB_LEM_HMPG_OPER ho ON sc.SCHUL_CODE = ho.SCHUL_CODE
		        INNER JOIN tb_lcm_alctcr_manage a ON ho.HMPG_OPER_SN = a.HMPG_OPER_SN
		        INNER JOIN tb_lcm_step_manage b On a.ALCTCR_SN = b.ALCTCR_SN
		        INNER JOIN tb_lcm_lctre_manage c ON b.STEP_SN = c.STEP_SN
		        INNER JOIN tb_lcm_cntnts_info d ON c.CNTNTS_SN = d.CNTNTS_SN
		      WHERE d.CNTNTS_TY_CODE = '017'
		      AND   (d.FRST_REGIST_PNTTM <![CDATA[>]]> #{frstPnttm} AND d.FRST_REGIST_PNTTM <![CDATA[<]]> DATE_FORMAT( DATE_ADD(#{frstPnttm}, INTERVAL 1 DAY), '%Y-%m-%d'))
<!-- 		      AND   (d.FRST_REGIST_PNTTM <![CDATA[>]]> '2020-12-08 6' AND d.FRST_REGIST_PNTTM <![CDATA[<]]> '2020-12-08 18') -->
<!--       		  AND   (d.FRST_REGIST_PNTTM <![CDATA[>]]> '2020-12-09 6' AND d.FRST_REGIST_PNTTM <![CDATA[<]]> '2020-12-09 18') -->
		      GROUP BY sc.CITY_NM, sc.SCHUL_LEVEL_CODE, sc.SCHUL_CODE, ho.HMPG_OPER_SN
		    ) a
		GROUP BY a.CITY_NM
    </select>
    
    <select id="avgservice.selectRealTimeGenAlctcrCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 조종례 화상강의 개설수  */
        SELECT   sc.CITY_NM AS cityNm
		        , sc.SCHUL_LEVEL_CODE AS schulLevelCode
		        , COUNT(*) AS cnt 
        FROM host_info hi
		INNER JOIN TB_SCM_SCHUL sc ON hi.host = sc.HOST
		INNER JOIN TB_LEM_HMPG_OPER ho ON sc.SCHUL_CODE = ho.SCHUL_CODE
		INNER JOIN tb_lcm_alctcr_manage a ON ho.HMPG_OPER_SN = a.HMPG_OPER_SN
		INNER JOIN tb_lcm_step_manage b On a.ALCTCR_SN = b.ALCTCR_SN
		INNER JOIN tb_lcm_lctre_manage c ON b.STEP_SN = c.STEP_SN
		INNER JOIN tb_lcm_cntnts_info d ON c.CNTNTS_SN = d.CNTNTS_SN
		WHERE a.ALCTCR_TY = 7
		AND d.CNTNTS_TY_CODE = '017'
		      AND   (d.FRST_REGIST_PNTTM <![CDATA[>]]> #{frstPnttm} AND d.FRST_REGIST_PNTTM <![CDATA[<]]> DATE_FORMAT( DATE_ADD(#{frstPnttm}, INTERVAL 1 DAY), '%Y-%m-%d'))
<!-- 		      AND   (d.FRST_REGIST_PNTTM <![CDATA[>]]> '2020-12-08 6' AND d.FRST_REGIST_PNTTM <![CDATA[<]]> '2020-12-08 18') -->
<!--       		  AND   (d.FRST_REGIST_PNTTM <![CDATA[>]]> '2020-12-09 6' AND d.FRST_REGIST_PNTTM <![CDATA[<]]> '2020-12-09 18') -->
		GROUP BY sc.CITY_NM, sc.SCHUL_LEVEL_CODE
    </select>
    
    <select id="avgservice.selectRealTimeGenLctreCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 화상강의 개설수  */
        SELECT 	  sc.CITY_NM AS cityNm
		        , sc.SCHUL_LEVEL_CODE AS schulLevelCode
		        , COUNT(*) AS cnt 
        FROM host_info hi
		INNER JOIN TB_SCM_SCHUL sc ON hi.host = sc.HOST
		INNER JOIN TB_LEM_HMPG_OPER ho ON sc.SCHUL_CODE = ho.SCHUL_CODE
		INNER JOIN tb_lcm_alctcr_manage a ON ho.HMPG_OPER_SN = a.HMPG_OPER_SN
		INNER JOIN tb_lcm_step_manage b On a.ALCTCR_SN = b.ALCTCR_SN
		INNER JOIN tb_lcm_lctre_manage c ON b.STEP_SN = c.STEP_SN
		INNER JOIN tb_lcm_cntnts_info d ON c.CNTNTS_SN = d.CNTNTS_SN
		WHERE a.ALCTCR_TY <![CDATA[<>]]> 7
		AND d.CNTNTS_TY_CODE = '017'
		      AND   (d.FRST_REGIST_PNTTM <![CDATA[>]]> #{frstPnttm} AND d.FRST_REGIST_PNTTM <![CDATA[<]]> DATE_FORMAT( DATE_ADD(#{frstPnttm}, INTERVAL 1 DAY), '%Y-%m-%d'))
<!-- 		      AND   (d.FRST_REGIST_PNTTM <![CDATA[>]]> '2020-12-08 6' AND d.FRST_REGIST_PNTTM <![CDATA[<]]> '2020-12-08 18') -->
<!--       		  AND   (d.FRST_REGIST_PNTTM <![CDATA[>]]> '2020-12-09 6' AND d.FRST_REGIST_PNTTM <![CDATA[<]]> '2020-12-09 18') -->
		GROUP BY sc.CITY_NM, sc.SCHUL_LEVEL_CODE
    </select>

    <select id="avgservice.selectRealTimeStudyCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 화상강의 이용자수  */
	 	SELECT 	  sc.CITY_NM AS cityNm
	 			, sc.SCHUL_LEVEL_CODE AS schulLevelCode
	            , COUNT(*) AS cnt
	    FROM host_info hi
		INNER JOIN TB_SCM_SCHUL sc ON hi.host = sc.HOST
		INNER JOIN TB_LEM_HMPG_OPER ho ON sc.SCHUL_CODE = ho.SCHUL_CODE
		INNER JOIN tb_lcm_alctcr_manage a ON ho.HMPG_OPER_SN = a.HMPG_OPER_SN
		INNER JOIN tb_lcm_step_manage b On a.ALCTCR_SN = b.ALCTCR_SN
		INNER JOIN tb_lcm_lctre_manage c ON b.STEP_SN = c.STEP_SN
		INNER JOIN tb_lem_lctre_lrn_manage d ON c.LCTRE_SN = d.LCTRE_SN
		WHERE c.CNTNTS_TY_CODE = '017'
    	AND (d.LAST_UPDT_PNTTM <![CDATA[>]]> #{frstPnttm} AND d.LAST_UPDT_PNTTM <![CDATA[<]]> DATE_FORMAT( DATE_ADD(#{frstPnttm}, INTERVAL 1 DAY), '%Y-%m-%d'))
<!--     	AND (d.LAST_UPDT_PNTTM <![CDATA[>]]> '2020-12-08 6' AND d.LAST_UPDT_PNTTM <![CDATA[<]]> '2020-12-08 18') -->
<!--     	AND (d.LAST_UPDT_PNTTM <![CDATA[>]]> '2020-12-09 6' AND d.LAST_UPDT_PNTTM <![CDATA[<]]> '2020-12-09 18') -->
		GROUP BY sc.CITY_NM, sc.SCHUL_LEVEL_CODE
    </select>
   
   
   
   
   
   
	<select id="avgservice.selectRealTimeSchoolDayCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	/* 온클 : 조종례 화상강의 학교수  */
	select a.CITY_NM AS cityNm
		  , a.SCHUL_LEVEL_CODE AS level
		  , COUNT(*) AS cnt
		from ( SELECT sc.CITY_NM
		        , sc.SCHUL_LEVEL_CODE
		        , sc.SCHUL_CODE
		        , sc.SCHUL_NM
		        , COUNT(*) 
		      FROM host_info hi
		        INNER JOIN TB_SCM_SCHUL sc ON hi.host = sc.HOST
		        INNER JOIN TB_LEM_HMPG_OPER ho ON sc.SCHUL_CODE = ho.SCHUL_CODE
		        INNER JOIN tb_lcm_alctcr_manage a ON ho.HMPG_OPER_SN = a.HMPG_OPER_SN
		        INNER JOIN tb_lcm_step_manage b On a.ALCTCR_SN = b.ALCTCR_SN
		        INNER JOIN tb_lcm_lctre_manage c ON b.STEP_SN = c.STEP_SN
		        INNER JOIN tb_lcm_cntnts_info d ON c.CNTNTS_SN = d.CNTNTS_SN
		      WHERE d.CNTNTS_TY_CODE = '017'
			  and d.FRST_REGIST_PNTTM <![CDATA[>=]]> #{frstPnttm}
			  and d.FRST_REGIST_PNTTM <![CDATA[<=]]> #{lastPnttm}
	      GROUP BY sc.CITY_NM, sc.SCHUL_LEVEL_CODE, sc.SCHUL_CODE
	    ) a
	GROUP BY a.CITY_NM
	</select>
    
    <select id="avgservice.selectRealTimeClassDayCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 조종례 화상강의 학급수  */
		select a.CITY_NM AS cityNm
		  , a.SCHUL_LEVEL_CODE AS level
		  , COUNT(*) AS cnt
		from ( SELECT sc.CITY_NM
		        , sc.SCHUL_LEVEL_CODE
		        , sc.SCHUL_CODE
		        , sc.SCHUL_NM
		        , ho.HMPG_OPER_SN
		        , ho.HMPG_NM
		        , COUNT(*) 
		      FROM host_info hi
		        INNER JOIN TB_SCM_SCHUL sc ON hi.host = sc.HOST
		        INNER JOIN TB_LEM_HMPG_OPER ho ON sc.SCHUL_CODE = ho.SCHUL_CODE
		        INNER JOIN tb_lcm_alctcr_manage a ON ho.HMPG_OPER_SN = a.HMPG_OPER_SN
		        INNER JOIN tb_lcm_step_manage b On a.ALCTCR_SN = b.ALCTCR_SN
		        INNER JOIN tb_lcm_lctre_manage c ON b.STEP_SN = c.STEP_SN
		        INNER JOIN tb_lcm_cntnts_info d ON c.CNTNTS_SN = d.CNTNTS_SN
		      WHERE d.CNTNTS_TY_CODE = '017'
		      and d.FRST_REGIST_PNTTM <![CDATA[>=]]> #{frstPnttm}
			  and d.FRST_REGIST_PNTTM <![CDATA[<=]]> #{lastPnttm}
		      GROUP BY sc.CITY_NM, sc.SCHUL_LEVEL_CODE, sc.SCHUL_CODE, ho.HMPG_OPER_SN
		    ) a
		GROUP BY a.CITY_NM
    </select>
    
	<select id="avgservice.selectRealTimeGenAlctcrDayCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 조종례 화상강의 개설수  */
        SELECT   sc.CITY_NM AS cityNm
		        , sc.SCHUL_LEVEL_CODE AS level
		        , COUNT(*) AS cnt 
        FROM host_info hi
		INNER JOIN TB_SCM_SCHUL sc ON hi.host = sc.HOST
		INNER JOIN TB_LEM_HMPG_OPER ho ON sc.SCHUL_CODE = ho.SCHUL_CODE
		INNER JOIN tb_lcm_alctcr_manage a ON ho.HMPG_OPER_SN = a.HMPG_OPER_SN
		INNER JOIN tb_lcm_step_manage b On a.ALCTCR_SN = b.ALCTCR_SN
		INNER JOIN tb_lcm_lctre_manage c ON b.STEP_SN = c.STEP_SN
		INNER JOIN tb_lcm_cntnts_info d ON c.CNTNTS_SN = d.CNTNTS_SN
		WHERE a.ALCTCR_TY = 7
		AND d.CNTNTS_TY_CODE = '017'
		and d.FRST_REGIST_PNTTM <![CDATA[>=]]> #{frstPnttm}
		and d.FRST_REGIST_PNTTM <![CDATA[<=]]> #{lastPnttm}
		GROUP BY sc.CITY_NM, sc.SCHUL_LEVEL_CODE
    </select>
    
    <select id="avgservice.selectRealTimeGenLctreDayCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 화상강의 개설수  */
        SELECT 	  sc.CITY_NM AS cityNm
		        , sc.SCHUL_LEVEL_CODE AS level
		        , COUNT(*) AS cnt 
        FROM host_info hi
		INNER JOIN TB_SCM_SCHUL sc ON hi.host = sc.HOST
		INNER JOIN TB_LEM_HMPG_OPER ho ON sc.SCHUL_CODE = ho.SCHUL_CODE
		INNER JOIN tb_lcm_alctcr_manage a ON ho.HMPG_OPER_SN = a.HMPG_OPER_SN
		INNER JOIN tb_lcm_step_manage b On a.ALCTCR_SN = b.ALCTCR_SN
		INNER JOIN tb_lcm_lctre_manage c ON b.STEP_SN = c.STEP_SN
		INNER JOIN tb_lcm_cntnts_info d ON c.CNTNTS_SN = d.CNTNTS_SN
		WHERE a.ALCTCR_TY <![CDATA[<>]]> 7
		AND d.CNTNTS_TY_CODE = '017'
		and d.FRST_REGIST_PNTTM <![CDATA[>=]]> #{frstPnttm}
		and d.FRST_REGIST_PNTTM <![CDATA[<=]]> #{lastPnttm}
		GROUP BY sc.CITY_NM, sc.SCHUL_LEVEL_CODE
    </select>
    
	<select id="avgservice.selectRealTimeStudyDayCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 화상강의 이용자수  */
	 	SELECT 	  sc.CITY_NM AS cityNm
	 			, sc.SCHUL_LEVEL_CODE AS level
	            , COUNT(*) AS cnt
	    FROM host_info hi
		INNER JOIN TB_SCM_SCHUL sc ON hi.host = sc.HOST
		INNER JOIN TB_LEM_HMPG_OPER ho ON sc.SCHUL_CODE = ho.SCHUL_CODE
		INNER JOIN tb_lcm_alctcr_manage a ON ho.HMPG_OPER_SN = a.HMPG_OPER_SN
		INNER JOIN tb_lcm_step_manage b On a.ALCTCR_SN = b.ALCTCR_SN
		INNER JOIN tb_lcm_lctre_manage c ON b.STEP_SN = c.STEP_SN
		INNER JOIN tb_lem_lctre_lrn_manage d ON c.LCTRE_SN = d.LCTRE_SN
		WHERE c.CNTNTS_TY_CODE = '017'
		and d.LAST_UPDT_PNTTM <![CDATA[>=]]> #{frstPnttm}
		and d.LAST_UPDT_PNTTM <![CDATA[<=]]> #{lastPnttm}
		GROUP BY sc.CITY_NM, sc.SCHUL_LEVEL_CODE
    </select>
    
    
	<select id="avgservice.selectEsofCntntsUseCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 전체강의 이용수 */
	 	SELECT * FROM (
		  SELECT  DEVICE AS device
		  		, SUM(CNTNTS_TY1_USE_CO) AS sum 
		  		, DATE_FORMAT(STTUS_DATE, '%Y-%m-%d') AS date  
		  FROM TB_TSM_CNTNTS_TY_USE_STTUS
		  GROUP BY device, date
		) a
		WHERE #{strDate} <![CDATA[<=]]> date AND date <![CDATA[<=]]> DATE_ADD(#{endDate}, INTERVAL 1 DAY)
    </select>
    
	<select id="avgservice.selectEsofCntntsUseCntAlctcr" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 이솦강의 이용수 (강좌별)*/ 
		SELECT      DATE_FORMAT(b.REGIST_PNTTM, '%Y%m%d') as date 
          		  , code.CODE_NM AS codeNm
	    		  , a.ALCTCR_NM AS alctcrNm 
	    		  , COUNT(*) AS cnt 
		FROM ( 
			SELECT a.ALCTCR_SN, a.ALCTCR_NM, c.LCTRE_NM, d.CNTNTS_SN
			FROM TB_LCM_ALCTCR_MANAGE a 
			INNER JOIN TB_LCM_STEP_MANAGE b ON a.ALCTCR_SN = b.ALCTCR_SN
			INNER JOIN TB_LCM_LCTRE_MANAGE c ON b.STEP_SN = c.STEP_SN
			INNER JOIN TB_LCM_CNTNTS_INFO d On c.CNTNTS_SN = d.CNTNTS_SN
			WHERE a.STTUS_CN = 'EBS 강좌 신규생성 : ESOF') a 
		INNER JOIN TB_LEM_CNTNTS_USE b ON a.CNTNTS_SN = b.CNTNTS_SN
		INNER JOIN TB_LCM_ALCTCR_MANAGE c ON b.ALCTCR_SN = c.ALCTCR_SN
		INNER JOIN TB_LEM_HMPG_OPER ho ON c.HMPG_OPER_SN = ho.HMPG_OPER_SN
		INNER JOIN TB_SCM_SCHUL sc ON ho.SCHUL_CODE = sc.SCHUL_CODE
		INNER JOIN HOST_INFO hi ON sc.HOST = hi.HOST
	    INNER JOIN (
		    SELECT '001' AS CONECT_OS_CODE, 'PC' AS CODE_NM UNION ALL    <!-- 001	Windows      -->
		    SELECT '002',	'PC' UNION ALL                               <!-- 002	Windows XP   -->
		    SELECT '003',	'PC' UNION ALL                               <!-- 003	Windows 2000 -->
		    SELECT '004',	'PC' UNION ALL                               <!-- 004	Windows Vista-->
		    SELECT '005',	'PC' UNION ALL                               <!-- 005	Windows 7    -->
		    SELECT '006',	'PC' UNION ALL                               <!-- 006	Windows 10   -->
		    SELECT '007',	'PC' UNION ALL                               <!-- 007	Windows NT   -->
		    SELECT '008',	'MB' UNION ALL                               <!-- 008	Android      -->
		    SELECT '009',	'PC' UNION ALL                               <!-- 009	Mac          -->
		    SELECT '010',	'MB' UNION ALL                               <!-- 010	Iphone       -->
		    SELECT '011',	'MB' UNION ALL                               <!-- 011	Ipad         -->
		    SELECT '012',	'MB' UNION ALL                               <!-- 012	Ipod         -->
		    SELECT '013',	'PC' UNION ALL                               <!-- 013	Linux        -->
		    SELECT '099',	'MB'                                         <!-- 099	ETC          -->
	    ) code ON b.CONECT_OS_CODE = code.CONECT_OS_CODE
		WHERE ( #{strDate} <![CDATA[<=]]> b.REGIST_PNTTM AND b.REGIST_PNTTM <![CDATA[<=]]> DATE_ADD(#{endDate}, INTERVAL 1 DAY) )
		GROUP BY date, code.CODE_NM, a.ALCTCR_SN
    </select>

	<select id="avgservice.selectEsofCntntsUseCntLevel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 이솦강의 이용수 (초중고별) */
		SELECT    DATE_FORMAT(b.REGIST_PNTTM, '%Y%m%d') as date
	            , code.CODE_NM AS codeNm
    			, sc.SCHUL_LEVEL_CODE AS level
	            , COUNT(*) AS cnt 
		FROM ( 
			  SELECT a.ALCTCR_SN, a.ALCTCR_NM, c.LCTRE_NM, d.CNTNTS_SN
			  FROM TB_LCM_ALCTCR_MANAGE a 
			  INNER JOIN TB_LCM_STEP_MANAGE b ON a.ALCTCR_SN = b.ALCTCR_SN
			  INNER JOIN TB_LCM_LCTRE_MANAGE c ON b.STEP_SN = c.STEP_SN
			  INNER JOIN TB_LCM_CNTNTS_INFO d On c.CNTNTS_SN = d.CNTNTS_SN
			  WHERE a.STTUS_CN = 'EBS 강좌 신규생성 : ESOF') a 
			INNER JOIN TB_LEM_CNTNTS_USE b ON a.CNTNTS_SN = b.CNTNTS_SN
			INNER JOIN TB_LCM_ALCTCR_MANAGE c ON b.ALCTCR_SN = c.ALCTCR_SN
			INNER JOIN TB_LEM_HMPG_OPER ho ON c.HMPG_OPER_SN = ho.HMPG_OPER_SN
			INNER JOIN TB_SCM_SCHUL sc ON ho.SCHUL_CODE = sc.SCHUL_CODE
			INNER JOIN HOST_INFO hi ON sc.HOST = hi.HOST
		INNER JOIN (
		    SELECT '001' AS CONECT_OS_CODE, 'PC' AS CODE_NM UNION ALL    <!-- 001	Windows      -->
		    SELECT '002',	'PC' UNION ALL                               <!-- 002	Windows XP   -->
		    SELECT '003',	'PC' UNION ALL                               <!-- 003	Windows 2000 -->
		    SELECT '004',	'PC' UNION ALL                               <!-- 004	Windows Vista-->
		    SELECT '005',	'PC' UNION ALL                               <!-- 005	Windows 7    -->
		    SELECT '006',	'PC' UNION ALL                               <!-- 006	Windows 10   -->
		    SELECT '007',	'PC' UNION ALL                               <!-- 007	Windows NT   -->
		    SELECT '008',	'MB' UNION ALL                               <!-- 008	Android      -->
		    SELECT '009',	'PC' UNION ALL                               <!-- 009	Mac          -->
		    SELECT '010',	'MB' UNION ALL                               <!-- 010	Iphone       -->
		    SELECT '011',	'MB' UNION ALL                               <!-- 011	Ipad         -->
		    SELECT '012',	'MB' UNION ALL                               <!-- 012	Ipod         -->
		    SELECT '013',	'PC' UNION ALL                               <!-- 013	Linux        -->
		    SELECT '099',	'MB'                                         <!-- 099	ETC          -->
		) code ON b.CONECT_OS_CODE = code.CONECT_OS_CODE
		WHERE ( #{strDate} <![CDATA[<=]]> b.REGIST_PNTTM AND b.REGIST_PNTTM <![CDATA[<=]]> DATE_ADD(#{endDate}, INTERVAL 1 DAY) )
		GROUP BY  date, code.CODE_NM, level
    </select>
    
	<select id="avgservice.selectEsofCntntsUseCntLctre" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 이솦강의 가져오기 수 (초중고별) */
		SELECT    date AS date
	    		, level AS level
		        , COUNT(*) AS cnt
		FROM (
		 	SELECT    sc.SCHUL_LEVEL_CODE AS level
		     			, DATE_FORMAT(b.FRST_REGIST_PNTTM, '%Y%m%d') as date
			FROM ( 
			  SELECT a.ALCTCR_SN, d.CNTNTS_SN
			  FROM TB_LCM_ALCTCR_MANAGE a 
			  INNER JOIN TB_LCM_STEP_MANAGE b ON a.ALCTCR_SN = b.ALCTCR_SN
			  INNER JOIN TB_LCM_LCTRE_MANAGE c ON b.STEP_SN = c.STEP_SN
			  INNER JOIN TB_LCM_CNTNTS_INFO d On c.CNTNTS_SN = d.CNTNTS_SN
			  WHERE a.STTUS_CN = 'EBS 강좌 신규생성 : ESOF') a 
		  INNER JOIN tb_lcm_lctre_manage b ON a.CNTNTS_SN = b.CNTNTS_SN
			INNER JOIN TB_LCM_STEP_MANAGE c ON b.STEP_SN = c.STEP_SN
			INNER JOIN TB_LCM_ALCTCR_MANAGE d ON c.ALCTCR_SN = d.ALCTCR_SN
			INNER JOIN TB_LEM_HMPG_OPER ho ON d.HMPG_OPER_SN = ho.HMPG_OPER_SN
			INNER JOIN TB_SCM_SCHUL sc ON ho.SCHUL_CODE = sc.SCHUL_CODE
			INNER JOIN HOST_INFO hi ON sc.HOST = hi.HOST
			WHERE ( #{strDate} <![CDATA[<=]]> b.FRST_REGIST_PNTTM AND b.FRST_REGIST_PNTTM <![CDATA[<=]]> DATE_ADD(#{endDate}, INTERVAL 1 DAY) )
		) a GROUP BY  date, level
    </select>
    
    <insert id="avgservice.setMaxExecutionTime">
	    SET SESSION max_execution_time = 6000000;
	</insert>
    
    
    
</mapper>