<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cmplnservice">

	<!-- 도시별 -->
    <select id="cmplnservice.selectCityList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 도시별 */
        SELECT CITY_NM AS cityNm
        FROM TB_SCM_SCHUL 
        GROUP BY CITY_NM
    </select>
    
	<!-- 지역별 -->
    <select id="cmplnservice.selectAreaList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 지역별 */
        SELECT AREA_NM AS areaNm
        FROM TB_SCM_SCHUL
        WHERE CITY_NM = #{cityNm} 
        GROUP BY AREA_NM
    </select>
    
	<!-- 지역별 -->
    <select id="cmplnservice.selectSchulLevelList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 초중고별 */
        SELECT SCHUL_LEVEL_CODE AS schulLevelCode
        FROM TB_SCM_SCHUL
        WHERE CITY_NM = #{cityNm}
        AND AREA_NM = #{areaNm} 
        GROUP BY SCHUL_LEVEL_CODE
    </select>
    
    <!-- 학교별 -->
    <select id="cmplnservice.selectSchulList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 학교별 */
        SELECT SCHUL_NM AS schulNm
        FROM TB_SCM_SCHUL
        WHERE CITY_NM = #{cityNm}
        AND AREA_NM = #{areaNm}
        AND SCHUL_LEVEL_CODE = #{schulLevelCode}
    </select>
    
    <!-- 클래스 -->
    <select id="cmplnservice.selectHostInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 호스트 */
        SELECT    SCHUL_CODE AS schulCode
        		, SCHUL_NM AS schulNM
        		, SCHUL_LEVEL_CODE AS schulLevelCode
        		, CITY_NM AS cityNm
        		, AREA_NM AS areaNm
        		, HOST AS host
        		, if(SCHUL_LEVEL_CODE = 'H', 'hoc', 'oc') AS main
        FROM TB_SCM_SCHUL
        WHERE CITY_NM = #{cityNm}
        AND AREA_NM = #{areaNm}
        AND SCHUL_LEVEL_CODE = #{schulLevelCode}
        AND SCHUL_NM = #{schulNm}
    </select>
    
    <!-- 클래스 -->
    <select id="cmplnservice.selectClassList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 클래스 */
        SELECT 
        		  a.HMPG_OPER_SN AS hmpgOperSn
        		, a.HMPG_NM  AS hmpgNm
        		, a.HMPG_URL AS hmpgUrl
        		, a.HMPG_REQST_SN AS hmpgReqstSn
        		, IF(a.OPER_AT = 1, 1, 0) AS operAt
        		, d.USER_SN AS userSn
        		, d.USER_NM AS userNm
        		, d.USER_ID AS userId
        		, a.GRADE   AS grade
        		, a.CLASS   AS schulClass
        		, c.HOST AS host
        		, b.SCHUL_NM AS schulNm
        FROM TB_LEM_HMPG_OPER a
        INNER JOIN TB_SCM_SCHUL b ON a.SCHUL_CODE = b.SCHUL_CODE
        INNER JOIN HOST_INFO c ON b.HOST = c.HOST
        INNER JOIN TB_SUM_USER_INFO d ON a.ESTER_SN = d.USER_SN
        WHERE a.SCHUL_CODE = #{schulCode}
        AND a.HMPG_SE_CODE = '005'
        ORDER BY a.OPER_AT, a.GRADE, a.CLASS, a.HMPG_NM, a.FRST_REGIST_PNTTM
    </select>
    
    
	<!-- 사용자 조회 -->
    <select id="cmplnservice.selectChangeEsterUser" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 사용자 조회 */
        SELECT    USER_SN AS userSn
        		, USER_ID AS userId
        		, USER_NM AS userNm
        		, USER_SE_CODE AS userSeCode
        		, TCHER_CRTFC_AT as tcherCrtfcAt
        FROM TB_SUM_USER_INFO
        WHERE USER_ID = #{userId}
    </select>
    
	<!-- 홈페이지 멤버 조회 -->
    <select id="cmplnservice.selectChangeEsterMber" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 홈페이지 멤버 조회 */
        SELECT  MBER_STTUS_CODE AS mberSttusCode
        FROM TB_LEM_HMPG_OPER_MBER
        WHERE USER_SN = #{userSn}
        AND HMPG_OPER_SN = #{hmpgOperSn}
    </select>
    
    
    <!-- 홈페이지 개설자 변경 -->
    <update id="cmplnservice.updateChangeHmpgOperUser" parameterType="java.util.HashMap">
    	/* 온클 : 개설자 변경 */
    	UPDATE TB_LEM_HMPG_OPER 
    	SET   ESTER_SN = #{userSn}
	    	, USER_ID = #{userId}
	    	, OPRTR_SN = #{userSn}
    	WHERE HMPG_OPER_SN = #{hmpgOperSn} 
    </update>
    
    <!-- 홈페이지 멤버 상태 변경 -->
    <update id="cmplnservice.updateHmpgOperMberUser" parameterType="java.util.HashMap">
    	/* 온클 : 홈페이지 멤버 상태 변경 */
    	UPDATE TB_LEM_HMPG_OPER_MBER SET MBER_STTUS_CODE = '005'
    	WHERE HMPG_OPER_SN = #{hmpgOperSn}
    	AND USER_SN = #{userSn} 
    </update>
    
    <!-- 홈페이지 멤버 가입 -->
    <insert id="cmplnservice.insertHmpgOperMberUser" parameterType="java.util.HashMap">
    	/* 온클 : 홈페이지 멤버 가입 */
    	INSERT INTO TB_LEM_HMPG_OPER_MBER (
			  HMPG_OPER_SN
			, USER_SN
			, MBER_SRBDE
			, BKMK_AT
			, MBER_STTUS_CODE
			, MBER_CONFM_DE
			, MBER_SECSN_DE
			, USER_ID
			, USER_NM
			, USER_SE_CODE
			, GRADE
			, CLASS
			, CLASS_NO
			, FRST_REGIST_IP
			, FRST_REGIST_PNTTM
			, FRST_REGISTER_ID
			, LAST_UPDT_IP
			, LAST_UPDT_PNTTM
			, LAST_UPDUSR_ID
    	)
    	VALUES (
    		  #{hmpgOperSn}
			, #{userSn}
			, NOW()
			, 0
			, '005'
			, NOW()
			, NULL
			, #{userId}
			, #{userNm}
			, #{userSeCode}
			, 0
			, 0
			, 0
			, "127.0.0.1"
			, NOW()
			, #{userSn}
			, "127.0.0.1"
			, NOW()
			, #{userSn}
    	)
    </insert>
    
    <!-- 홈페이지 폐쇄 -->
    <update id="cmplnservice.closeHmpg" parameterType="java.util.HashMap">
    	/* 온클 : 홈페이지 폐쇄  */
    	UPDATE TB_LEM_HMPG_OPER SET OPER_AT = 2
    	WHERE HMPG_URL = #{hmpgUrl} 
    </update>
    
    <!-- 홈페이지 폐쇄 -->
    <update id="cmplnservice.closeHmpgReqst" parameterType="java.util.HashMap">
    	/* 온클 : 홈페이지 폐쇄  */
    	UPDATE TB_SUM_HMPG_REQST 
    	SET   CLS_STTUS_CODE = '005'
    		, CLS_STTUS_CN = '온라인클래스 사용자 폐쇄요청(고객센터)'
    		, CLS_REQST_DE = NOW()
    		, CLS_APPLCNT_SN = '4699168'
    		, CLS_CONFM_DE = NOW()
    		, CLS_CONFMER_SN = '4699168'
    	WHERE HMPG_URL = #{hmpgUrl} 
    </update>
    
    <!-- 홈페이지 복구 -->
    <update id="cmplnservice.closeRecoverHmpg" parameterType="java.util.HashMap">
    	/* 온클 : 홈페이지 폐쇄 복구 */
    	UPDATE TB_LEM_HMPG_OPER SET OPER_AT = 1
    	WHERE HMPG_URL = #{hmpgUrl} 
    </update>
    
    <!-- 홈페이지 복구 -->
    <update id="cmplnservice.closeRecoverHmpgReqst" parameterType="java.util.HashMap">
    	/* 온클 : 홈페이지 폐쇄 복구 */
    	UPDATE TB_SUM_HMPG_REQST 
    	SET 
    	      CLS_STTUS_CODE = null
    		, CLS_STTUS_CN = null
    		, CLS_REQST_DE = null
    		, CLS_APPLCNT_SN = null
    		, CLS_CONFM_DE = null
    		, CLS_CONFMER_SN = null
    	WHERE HMPG_URL = #{hmpgUrl} 
    </update>
    
   	<!-- 홈페이지 강좌 목록 -->
    <select id="cmplnservice.selectALctcrManageList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 홈페이지 강좌 목록 */
        SELECT    a.ALCTCR_SN AS alctcrSn
				, a.ORGINL_ALCTCR_SN AS orginlAlctcrSn
				, a.OTHBC_AT AS othbcAt
				, a.ALCTCR_NM AS alctcrNm
				, a.ALCTCR_TY AS alctcrTy
				, a.HMPG_OPER_SN AS hmpgOperSn
				, a.HMPG_SE_CODE AS hmpgSeCode
				, a.DFFLY_CODE AS dfflyCode
				, a.ALCTCR_INTRCN AS alctcrIntrcn
				, a.LRN_GOAL AS lrnGoal
				, a.STTUS_CODE AS sttusCode
				, a.STTUS_CN AS sttusCn
				, a.SW_LANG_CODE AS swLangCode
				, a.ESTBL_REQST_DT AS estblReqstDt
				, a.ESTBL_APPLCNT_SN AS estblApplcntSn
				, a.ESTBL_CONFM_DE AS estblConfmDe
				, a.ESTBL_CONFMER_SN AS estblConfmerSn
				, a.CLS_STTUS_CODE AS clsSttusCode
				, a.CLS_STTUS_CN AS clsSttusCn
				, a.CLS_REQST_DT AS clsReqstDt
				, a.CLS_APPLCNT_SN AS clsApplcntSn
				, a.CLS_CONFM_DT AS clsConfmDt
				, a.CLS_CONFMER_SN AS clsConfmerSn
				, a.ALCTCR_OPEN_DE AS alctcrOpenDe
				, a.CLS_DE AS clsDe
				, a.CLS_AT AS clsAt
				, a.CLS_RESN AS clsResn
				, a.MNTO_NEED_AT AS mntoNeedAt
				, a.ALCTCR_TAG AS alctcrTag
				, a.IMAGE_ATCH_FILE_ID AS imageAtchFileId
				, a.IMAGE_FILE_URL AS imageFileUrl
				, a.RECOMEND_AT AS recomendAt
				, a.ALCTCR_COPY_AGRE_AT AS alctcrCopyAgreAt
				, a.ALCTCR_COPY_AGRE_DT AS alctcrCopyAgreDt
				, a.CRTFC_USE_AT AS crtfcUseAt
				, a.COMPL_STDR_CODE AS complStdrCode
				, a.COMPL_EVL_SCORE AS complEvlScore
				, a.COMPL_LCTRE_SCORE AS complLctreScore
				, a.CTFHV_CODE AS ctfhvCode
				, a.CTFHV_ATCH_FILE_ID AS ctfhvAtchFileId
				, a.SMINTS_DLLN_MAN_DTRMN_AT AS smintsDllnManDtrmnAt
				, a.SMINTS_DLLN_MAN_DTRMN_DE AS smintsDllnManDtrmnDe
				, a.FRST_REGIST_IP AS frstRegistIp
				, a.FRST_REGIST_PNTTM AS frstRegistPnttm
				, a.FRST_REGISTER_ID AS frstRegisterId
				, a.LAST_UPDT_IP AS lastUpdtIp
				, a.LAST_UPDT_PNTTM AS lastUpdtPnttm
				, a.LAST_UPDUSR_ID AS lastUpdusrId
        FROM TB_LCM_ALCTCR_MANAGE a
        LEFT JOIN tb_lcm_alctcr_manage_sort b ON a.ALCTCR_SN = b.ALCTCR_SN
        WHERE HMPG_OPER_SN = #{hmpgOperSn}
        ORDER BY clsSttusCode, b.SORT_ORDR, alctcrNm, frstRegistPnttm
    </select>
    
    <!-- 홈페이지 강좌 폐쇄 -->
	<update id="cmplnservice.closeAlctcrManage" parameterType="java.util.HashMap">
		/* 온클 : 홈페이지 강좌 폐쇄 */
    	UPDATE TB_LCM_ALCTCR_MANAGE 
    	SET   CLS_STTUS_CODE = '005'
    		, CLS_STTUS_CN = CONCAT('강좌폐쇄 신청 승인일자 : ', DATE_FORMAT(NOW(), '%Y-%m-%d'),' 강좌폐쇄 신청 심사결과 승인처리.')
    		, CLS_REQST_DT = NOW()
			, CLS_APPLCNT_SN = '4699168'
    		, CLS_CONFM_DT = NOW()
<!--     		, CLS_CONFMER_SN = '' -->
    		, CLS_DE = NOW()
    		, CLS_AT = 1
    		, CLS_RESN = '선생님 요청에 의한 폐쇄 ( 민원 )'
    	WHERE ALCTCR_SN = #{alctcrSn} 
	</update>
	
	<!-- 홈페이지 강좌 폐쇄 복구 -->
	<update id="cmplnservice.closeAlctcrManageReco" parameterType="java.util.HashMap">
		/* 온클 : 홈페이지 강좌 폐쇄 복구 */
    	UPDATE TB_LCM_ALCTCR_MANAGE 
    	SET   CLS_STTUS_CODE = null
    		, CLS_STTUS_CN = null
    		, CLS_REQST_DT = null
			, CLS_APPLCNT_SN = null
    		, CLS_CONFM_DT = null
<!--     		, CLS_CONFMER_SN = null -->
    		, CLS_DE = null
    		, CLS_AT = 0
    		, CLS_RESN = null
    	WHERE ALCTCR_SN = #{alctcrSn} 
	</update>
    
   	<!-- 홈페이지 멤버 목록 -->
    <select id="cmplnservice.selectHmpgMberList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 홈페이지 멤버 (수강생) 목록 */
        SELECT    a.OPER_MBER_SN AS operMberSn
				, a.HMPG_OPER_SN AS hmpgOperSn
				, a.USER_SN AS userSn
				, a.MBER_SRBDE AS mberSrbde
				, a.BKMK_AT AS bkmkAt
				, a.MBER_STTUS_CODE AS mberSttusCode
				, (SELECT CODE_NM FROM comtccmmndetailcode WHERE CODE_ID = 'MBER_STTUS_CODE' AND CODE = a.MBER_STTUS_CODE) AS mberSttusStr
				, a.MBER_CONFM_DE AS mberConfmDe
				, a.MBER_SECSN_DE AS mberSecsnDe
				, a.USER_ID AS userId
				, a.USER_NM AS userNm
				, a.USER_SE_CODE AS userSeCode
        		, a.GRADE AS grade
        		, a.CLASS AS mberClass
        		, a.CLASS_NO AS mberClassNo
				, a.FRST_REGIST_IP AS frstRegistIp
				, a.FRST_REGIST_PNTTM AS frstRegistPnttm
				, a.FRST_REGISTER_ID AS frstRegisterId
				, a.LAST_UPDT_IP AS lastUpdtIp
				, a.LAST_UPDT_PNTTM AS lastUpdtPnttm
				, a.LAST_UPDUSR_ID AS lastUpdusrId
				, #{alctcrSn} AS alctcrSn
				, c.ATNLC_STTUS_CODE AS atnlcSttusCode
				, (SELECT CODE_NM FROM comtccmmndetailcode WHERE CODE_ID = 'ATNLC_STTUS_CODE' AND CODE = c.ATNLC_STTUS_CODE) AS atnlcSttusStr
				<![CDATA[
					, if(aa.ESTER_SN = aaa.USER_SN, '<span style="color:red">관리자</span>', if(aaa.TCHER_CRTFC_AT = 1, '<span style="color:green">선생님</span>', '')) AS job
				]]>
		FROM  tb_lem_hmpg_oper aa
        INNER JOIN TB_LEM_HMPG_OPER_MBER a ON aa.HMPG_OPER_SN = a.HMPG_OPER_SN
        INNER JOIN TB_SUM_USER_INFO aaa On a.USER_SN = aaa.USER_SN
		LEFT JOIN tb_lcm_alctcr_manage b ON a.HMPG_OPER_SN = b.HMPG_OPER_SN
		LEFT JOIN tb_lem_alctcr_atnlc c ON b.ALCTCR_SN = c.ALCTCR_SN AND a.USER_SN = c.USER_SN
        WHERE a.HMPG_OPER_SN = #{hmpgOperSn}
        <choose>
        	<when test="alctcrSn != null">
        		AND   c.ALCTCR_SN = #{alctcrSn}
        		GROUP BY c.USER_SN	
        	</when>
        	<otherwise>
        		GROUP BY a.USER_SN
        	</otherwise>
        </choose>
        ORDER BY FIELD(a.MBER_STTUS_CODE, '005', '001', '002', '003', '004', '006') , job DESC, a.GRADE, a.CLASS, a.CLASS_NO
    </select>
    
   	<!-- 홈페이지 강좌 강의 목록 -->
    <select id="cmplnservice.selectLctreList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 온클 : 홈페이지 강좌 강의 목록 */
        SELECT
        		  a.ALCTCR_NM AS alctcrNm
        		, a.ALCTCR_SN AS alctcrSn
        		, g.LRN_AT AS lrnAt
        		, g.LRN_TIME AS lrnTime
        		, g.USER_ID AS userId
        		, g.FRST_REGIST_PNTTM AS frstTegistPnttm
        		, g.LAST_UPDT_PNTTM AS lastUpdtPnttm 
        		, c.LCTRE_SN AS lctreSn
        		, c.LCTRE_NM AS lctreNm
        		, e.CODE_NM AS codeNm
        		, d.CNTNTS_TY_CODE AS cntntsTyCode
        		, f.REVIV_TIME AS revivTime
				, CASE
		            WHEN IFNULL(f.MVP_FILE_URL, '') != ''
		            THEN f.MVP_FILE_URL
		            WHEN IFNULL(f.ATCH_FILE_ID, '') != '' 
		            THEN (SELECT CONCAT('http://ocup.ebssw.kr', FILE_STRE_COURS, STRE_FILE_NM) FROM comtnfiledetail WHERE ATCH_FILE_ID = f.ATCH_FILE_ID)
		            WHEN IFNULL(f.MVP_FLPTH, '') != ''
		            THEN CONCAT(f.MVP_FLPTH, f.MVP_FILE_NM)
		        END AS mvpFileUrl
        FROM  TB_LCM_ALCTCR_MANAGE a
        INNER JOIN TB_LCM_STEP_MANAGE b ON a.ALCTCR_SN = b.ALCTCR_SN
		INNER JOIN TB_LCM_LCTRE_MANAGE c ON b.STEP_SN = c.STEP_SN
		INNER JOIN tb_lcm_cntnts_info d ON c.CNTNTS_SN = d.CNTNTS_SN
		LEFT JOIN tb_lem_lctre_lrn_manage g ON c.LCTRE_SN = g.LCTRE_SN
		LEFT JOIN (
		      SELECT sub1.* 
		      FROM tb_lcm_cntnts_mvp sub1 
		      INNER JOIN (
		              SELECT MAX(MVP_LCTRE_SN) AS MVP_LCTRE_SN
		              FROM tb_lcm_cntnts_mvp 
		              GROUP BY CNTNTS_SN
		      ) sub2 ON sub1.MVP_LCTRE_SN = sub2.MVP_LCTRE_SN
	    ) f ON d.CNTNTS_SN = f.CNTNTS_SN
		INNER JOIN comtccmmndetailcode e ON e.CODE = d.CNTNTS_TY_CODE AND e.CODE_ID = 'CNTNTS_TY_CODE'
		<choose>
			<when test="userSn != null"> <!-- 멤버목록 > 강의목록 -->
				WHERE a.HMPG_OPER_SN = #{hmpgOperSn}
				AND g.USER_ID = #{userSn}
				<if test="alctcrSn"> <!-- 강좌목록 > 수강생 목록 > 강의목록 -->
					AND a.ALCTCR_SN = #{alctcrSn}
				</if>
				ORDER BY a.ALCTCR_SN, c.LCTRE_SN
			</when>
			<otherwise> <!-- 강좌목록 > 강의목록 -->
				WHERE a.ALCTCR_SN = #{alctcrSn}
				GROUP BY c.LCTRE_SN
			</otherwise>
		</choose>
    </select>
    
   	<!-- 강의 학습 이력 -->
	<select id="cmplnservice.selectLctreLrnHist" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		/* 온클 : 강의 학습 이력 */
		SELECT    <!-- A.HMPG_NM AS hmpgNm
				, B.GRADE AS '학년'
		        , B.CLASS AS '반'
		        , B.CLASS_NO AS '번호'
		        , B.USER_NM AS '이름'
		        , B.USER_ID AS '아이디'
		        , C.ALCTCR_NM AS '강좌명'
		        , F.LCTRE_NM AS '강의명'
		        , J.CODE_NM AS '강의유형'
		        , K.LRN_TIME AS 'LRN_TIME'
		        , K.SERVER_LRN_TIME AS 'SERVER_LRN_TIME'
		        , K.FRST_REGIST_PNTTM AS '학습일시'
		        , G.LRN_TIME AS '총학습시간'
		        , I.REVIV_TIME AS '목표학습시간'
		        , IF(G.LRN_AT = 1, '완료', '미완료') AS '학습여부' -->
		        
		          C.ALCTCR_NM AS ALCTCR_NM
		        , F.LCTRE_NM AS LCTRE_NM
		        , G.LRN_MANAGE_SN AS LRN_MANAGE_SN
		        , B.USER_NM AS USER_NM
		        , K.LRN_TIME AS LRN_TIME
		        , K.SERVER_LRN_TIME AS SERVER_LRN_TIME
		        , K.FRST_REGIST_PNTTM AS FRST_REGIST_PNTTM
		        , I.REVIV_TIME AS REVIV_TIME
		        
		FROM TB_LEM_HMPG_OPER A
		INNER JOIN TB_LEM_HMPG_OPER_MBER B ON A.HMPG_OPER_SN = B.HMPG_OPER_SN
		INNER JOIN TB_LCM_ALCTCR_MANAGE C ON A.HMPG_OPER_SN = C.HMPG_OPER_SN
		INNER JOIN TB_LEM_ALCTCR_ATNLC D ON C.ALCTCR_SN = D.ALCTCR_SN AND B.USER_SN = D.USER_SN
		INNER JOIN TB_LCM_STEP_MANAGE E ON D.ALCTCR_SN = E.ALCTCR_SN
		INNER JOIN TB_LCM_LCTRE_MANAGE F ON E.STEP_SN = F.STEP_SN
		INNER JOIN TB_LEM_LCTRE_LRN_MANAGE G ON F.LCTRE_SN = G.LCTRE_SN AND D.USER_SN = G.USER_ID
		INNER JOIN TB_LCM_CNTNTS_INFO H ON F.CNTNTS_SN = H.CNTNTS_SN
		LEFT JOIN (
		      SELECT sub1.* 
		      FROM tb_lcm_cntnts_mvp sub1 
		      INNER JOIN (
		              SELECT MAX(MVP_LCTRE_SN) AS MVP_LCTRE_SN
		              FROM tb_lcm_cntnts_mvp 
		              GROUP BY CNTNTS_SN
		      ) sub2 ON sub1.MVP_LCTRE_SN = sub2.MVP_LCTRE_SN
	    ) I ON H.CNTNTS_SN = I.CNTNTS_SN
		INNER JOIN COMTCCMMNDETAILCODE J ON H.CNTNTS_TY_CODE = J.CODE AND J.CODE_ID = 'CNTNTS_TY_CODE'
		LEFT JOIN TB_STM_LCTRE_LRN_MANAGE_ALL_HIST K ON G.LRN_MANAGE_SN = K.LRN_MANAGE_SN
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="hmpgOperSn != null">
				AND A.HMPG_OPER_SN = #{hmpgOperSn}
			</if>
			<if test="userSn != null">
				AND B.USER_SN = #{userSn}
			</if>
			<if test="alctcrSn != null">
				AND C.ALCTCR_SN = #{alctcrSn}
			</if>
			<if test="lctreSn != null">
				AND F.LCTRE_SN = #{lctreSn}
			</if>
		</trim>
	</select>
    
    
	<!-- 강의 학습 상세 -->
	<select id="cmplnservice.selectLctreLrnDetail" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		/* 온클 : 강의 학습 상세 */
		SELECT    <!-- A.HMPG_NM AS hmpgNm
				, B.GRADE AS '학년'
		        , B.CLASS AS '반'
		        , B.CLASS_NO AS '번호'
		        , B.USER_NM AS '이름'
		        , B.USER_ID AS '아이디'
		        , C.ALCTCR_NM AS '강좌명'
		        , F.LCTRE_NM AS '강의명'
		        , J.CODE_NM AS '강의유형'
		        , G.FRST_REGIST_PNTTM AS '학습시작일시'
		        , IF(G.LRN_AT = 1, G.LAST_UPDT_PNTTM, '') AS '학습완료일시'
		        , IF(I.CNTNTS_SN IS NOT NULL, CONCAT(G.LRN_TIME, '/', I.REVIV_TIME), j.CODE_NM) AS '학습시간/목표시간'
		        , IF(G.LRN_AT = 1, '완료', '미완료') AS '학습여부' -->
		        
		          A.HMPG_NM AS '클래스명'
				, B.GRADE AS '학년'
		        , B.CLASS AS '반'
		        , B.CLASS_NO AS '번호'
		        , CONCAT(B.USER_NM, '(', B.USER_ID, ')') AS '이름(아이디)'
		        , J.CODE_NM AS '강의유형'
		        , C.ALCTCR_NM AS '강좌명'
		        , F.LCTRE_NM AS '강의명'
		        , B.USER_SN AS USER_SN
		        , F.LCTRE_SN AS LCTRE_SN
		        , G.LRN_TIME AS '학습시간'
		        , I.REVIV_TIME AS '목표 학습시간'
		        , G.FRST_REGIST_PNTTM AS '학습시작시간'
		        , IF(G.LRN_AT = 1, G.LAST_UPDT_PNTTM, '') AS '학습완료시간'
		        , IF(G.LRN_AT = 1, '완료', '미완료') AS '학습여부'
		FROM TB_LEM_HMPG_OPER A
		INNER JOIN TB_LEM_HMPG_OPER_MBER B ON A.HMPG_OPER_SN = B.HMPG_OPER_SN
		INNER JOIN TB_LCM_ALCTCR_MANAGE C ON A.HMPG_OPER_SN = C.HMPG_OPER_SN
		INNER JOIN TB_LEM_ALCTCR_ATNLC D ON C.ALCTCR_SN = D.ALCTCR_SN AND B.USER_SN = D.USER_SN
		INNER JOIN TB_LCM_STEP_MANAGE E ON D.ALCTCR_SN = E.ALCTCR_SN
		INNER JOIN TB_LCM_LCTRE_MANAGE F ON E.STEP_SN = F.STEP_SN
		INNER JOIN TB_LEM_LCTRE_LRN_MANAGE G ON F.LCTRE_SN = G.LCTRE_SN AND D.USER_SN = G.USER_ID
		INNER JOIN TB_LCM_CNTNTS_INFO H ON F.CNTNTS_SN = H.CNTNTS_SN
		LEFT JOIN (
		      SELECT sub1.* 
		      FROM tb_lcm_cntnts_mvp sub1 
		      INNER JOIN (
		              SELECT MAX(MVP_LCTRE_SN) AS MVP_LCTRE_SN
		              FROM tb_lcm_cntnts_mvp 
		              GROUP BY CNTNTS_SN
		      ) sub2 ON sub1.MVP_LCTRE_SN = sub2.MVP_LCTRE_SN
	    ) I ON H.CNTNTS_SN = I.CNTNTS_SN
		INNER JOIN COMTCCMMNDETAILCODE J ON H.CNTNTS_TY_CODE = J.CODE AND J.CODE_ID = 'CNTNTS_TY_CODE'
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="hmpgOperSn != null">
				AND A.HMPG_OPER_SN = #{hmpgOperSn}
			</if>
			<if test="userSn != null">
				AND B.USER_SN = #{userSn}
			</if>
			<if test="alctcrSn != null">
				AND C.ALCTCR_SN = #{alctcrSn}
			</if>
			<if test="lctreSn != null">
				AND F.LCTRE_SN = #{lctreSn}
			</if>
		</trim>
	</select>
	
</mapper>